BEGIN;

SET CONSTRAINTS ALL DEFERRED;

-- run your bulk inserts / updates here

DROP TABLE IF EXISTS activity_log CASCADE;

CREATE TABLE activity_log (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  log_name varchar(255) DEFAULT NULL,
  description text NOT NULL,
  subject_type varchar(255) DEFAULT NULL,
  event varchar(255) DEFAULT NULL,
  subject_id bigint DEFAULT NULL,
  causer_type varchar(255) DEFAULT NULL,
  causer_id bigint DEFAULT NULL,
  properties jsonb,
  batch_uuid char(36) DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX subject ON activity_log (subject_type, subject_id);
CREATE INDEX causer ON activity_log (causer_type, causer_id);
CREATE INDEX activity_log_log_name_index ON activity_log (log_name);


-- prod.admins definition

DROP TABLE IF EXISTS admins CASCADE;

CREATE TABLE admins (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  title varchar(255) DEFAULT NULL,
  first_name varchar(255) NOT NULL,
  middle_name varchar(255) DEFAULT NULL,
  last_name varchar(255) NOT NULL,
  email varchar(255) NOT NULL,
  phone varchar(255) DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  CONSTRAINT admins_email_unique UNIQUE (email)
);


-- prod.asset_addresses definition

DROP TABLE IF EXISTS asset_addresses CASCADE;

CREATE TABLE asset_addresses (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  postcode varchar(255) DEFAULT NULL,
  country varchar(255) DEFAULT NULL,
  county varchar(255) DEFAULT NULL,
  city varchar(255) DEFAULT NULL,
  district varchar(255) DEFAULT NULL,
  street varchar(255) DEFAULT NULL,
  house_number varchar(255) DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);


-- prod.asset_insurance_type definition

DROP TABLE IF EXISTS asset_insurance_type CASCADE;

CREATE TABLE asset_insurance_type (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);


-- prod.asset_types definition

DROP TABLE IF EXISTS asset_types CASCADE;

CREATE TABLE asset_types (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  max_ltv numeric(22,4) DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);


-- prod.attribute_entities definition

DROP TABLE IF EXISTS attribute_entities CASCADE;

CREATE TABLE attribute_entities (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  class varchar(64) NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  CONSTRAINT attribute_entities_name_unique UNIQUE (name),
  CONSTRAINT attribute_entities_class_unique UNIQUE (class)
);


-- prod.attribute_types definition

DROP TABLE IF EXISTS attribute_types CASCADE;

CREATE TABLE attribute_types (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  is_system_type smallint NOT NULL DEFAULT 1,
  deleted_at timestamp without time zone DEFAULT NULL,
  CONSTRAINT attribute_types_name_unique UNIQUE (name)
);


-- prod.bank_details definition

DROP TABLE IF EXISTS bank_details CASCADE;

CREATE TABLE bank_details (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  sort_code varchar(255) DEFAULT NULL,
  account_number varchar(255) DEFAULT NULL,
  bic varchar(255) DEFAULT NULL,
  iban varchar(255) DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);


-- prod.bridge_drawdown_types definition

DROP TABLE IF EXISTS bridge_drawdown_types CASCADE;

CREATE TABLE bridge_drawdown_types (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);


-- prod.charge_types definition

DROP TABLE IF EXISTS charge_types CASCADE;

CREATE TABLE charge_types (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);


-- prod.client_form_status definition

DROP TABLE IF EXISTS client_form_status CASCADE;

CREATE TABLE client_form_status (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);


-- prod.companies definition

DROP TABLE IF EXISTS companies CASCADE;

CREATE TABLE companies (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);


-- prod.currencies definition

DROP TABLE IF EXISTS currencies CASCADE;

CREATE TABLE currencies (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  label varchar(255) NOT NULL,
  currency_code varchar(255) NOT NULL,
  prefix varchar(255) DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);


-- prod.deal_aborted_reasons definition

DROP TABLE IF EXISTS deal_aborted_reasons CASCADE;

CREATE TABLE deal_aborted_reasons (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  title text NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);


-- prod.deal_document_risk definition

DROP TABLE IF EXISTS deal_document_risk CASCADE;

CREATE TABLE deal_document_risk (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);


-- prod.deal_statuses definition

DROP TABLE IF EXISTS deal_statuses CASCADE;

CREATE TABLE deal_statuses (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);


-- prod.deal_types definition

DROP TABLE IF EXISTS deal_types CASCADE;

CREATE TABLE deal_types (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);


-- prod.document_types definition

DROP TABLE IF EXISTS document_types CASCADE;

CREATE TABLE document_types (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);


-- prod.drawdown_event_amount_type definition

DROP TABLE IF EXISTS drawdown_event_amount_type CASCADE;

CREATE TABLE drawdown_event_amount_type (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);


-- prod.drawdown_event_status definition

DROP TABLE IF EXISTS drawdown_event_status CASCADE;

CREATE TABLE drawdown_event_status (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);


-- prod.drawdown_status definition

DROP TABLE IF EXISTS drawdown_status CASCADE;

CREATE TABLE drawdown_status (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);


-- prod.failed_jobs definition

DROP TABLE IF EXISTS failed_jobs CASCADE;

CREATE TABLE failed_jobs (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  uuid varchar(255) NOT NULL,
  connection text NOT NULL,
  queue text NOT NULL,
  payload text NOT NULL,
  exception text NOT NULL,
  failed_at timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT failed_jobs_uuid_unique UNIQUE (uuid)
);


-- prod.fee_options definition

DROP TABLE IF EXISTS fee_options CASCADE;

CREATE TABLE fee_options (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);


-- prod.fee_status definition

DROP TABLE IF EXISTS fee_status CASCADE;

CREATE TABLE fee_status (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);


-- prod.fee_type definition

DROP TABLE IF EXISTS fee_type CASCADE;

CREATE TABLE fee_type (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  default_value_flat numeric(22,4) DEFAULT NULL,
  default_value_perc numeric(8,2) DEFAULT NULL,
  not_deletable boolean DEFAULT NULL,
  active boolean NOT NULL DEFAULT true
);


-- prod.form_types definition

DROP TABLE IF EXISTS form_types CASCADE;

CREATE TABLE form_types (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);


-- prod.guarantor_corporates definition

DROP TABLE IF EXISTS guarantor_corporates CASCADE;

CREATE TABLE guarantor_corporates (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  company_name varchar(255) NOT NULL,
  company_number varchar(255) NOT NULL,
  email varchar(255) NOT NULL,
  phone varchar(255) DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  CONSTRAINT guarantor_corporates_company_number_unique UNIQUE (company_number),
  CONSTRAINT guarantor_corporates_email_unique UNIQUE (email)
);


-- prod.guarantor_individuals definition

DROP TABLE IF EXISTS guarantor_individuals CASCADE;

CREATE TABLE guarantor_individuals (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  title varchar(255) DEFAULT NULL,
  first_name varchar(255) NOT NULL,
  middle_name varchar(255) DEFAULT NULL,
  last_name varchar(255) NOT NULL,
  email varchar(255) NOT NULL,
  phone varchar(255) DEFAULT NULL,
  previous_name varchar(255) DEFAULT NULL,
  marital_status varchar(255) DEFAULT NULL,
  date_of_birth date DEFAULT NULL,
  nationality varchar(255) DEFAULT NULL,
  passport_number varchar(255) DEFAULT NULL,
  permanent_right_to_reside text DEFAULT NULL CHECK (permanent_right_to_reside IN ('yes','no')),
  address_history jsonb DEFAULT NULL,
  ppsn varchar(255) DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  CONSTRAINT guarantor_individuals_email_unique UNIQUE (email)
);


-- prod.guarantor_type definition

DROP TABLE IF EXISTS guarantor_type CASCADE;

CREATE TABLE guarantor_type (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);


-- prod.interest_calculation_types definition

DROP TABLE IF EXISTS interest_calculation_types CASCADE;

CREATE TABLE interest_calculation_types (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  formula varchar(255) DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);


-- prod.interest_subtypes definition

DROP TABLE IF EXISTS interest_subtypes CASCADE;

CREATE TABLE interest_subtypes (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);


-- prod.interest_types definition

DROP TABLE IF EXISTS interest_types CASCADE;

CREATE TABLE interest_types (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);


-- prod.introducer_type definition

DROP TABLE IF EXISTS introducer_type CASCADE;

CREATE TABLE introducer_type (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);


-- prod.jobs definition

DROP TABLE IF EXISTS jobs CASCADE;

CREATE TABLE jobs (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  queue varchar(255) NOT NULL,
  payload text NOT NULL,
  attempts smallint NOT NULL,
  reserved_at integer DEFAULT NULL,
  available_at integer NOT NULL,
  created_at integer NOT NULL
);
CREATE INDEX jobs_queue_index ON jobs (queue);


-- prod.lending_types definition

DROP TABLE IF EXISTS lending_types CASCADE;

CREATE TABLE lending_types (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);


-- prod.loan_calculation_method definition

DROP TABLE IF EXISTS loan_calculation_method CASCADE;

CREATE TABLE loan_calculation_method (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);


-- prod.marital_statuses definition

DROP TABLE IF EXISTS marital_statuses CASCADE;

CREATE TABLE marital_statuses (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);


-- prod.marketing_sources definition

DROP TABLE IF EXISTS marketing_sources CASCADE;

CREATE TABLE marketing_sources (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);


-- prod.migrations definition

DROP TABLE IF EXISTS migrations CASCADE;

CREATE TABLE migrations (
  id integer GENERATED BY DEFAULT AS IDENTITY,
  migration varchar(255) NOT NULL,
  batch integer NOT NULL
);


-- prod.name_titles definition

DROP TABLE IF EXISTS name_titles CASCADE;

CREATE TABLE name_titles (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);


-- prod.order_statuses definition

DROP TABLE IF EXISTS order_statuses CASCADE;

CREATE TABLE order_statuses (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);


-- prod.ownership_types definition

DROP TABLE IF EXISTS ownership_types CASCADE;

CREATE TABLE ownership_types (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);


-- prod.password_resets definition

DROP TABLE IF EXISTS password_resets CASCADE;

CREATE TABLE password_resets (
  my_row_id bigint GENERATED BY DEFAULT AS IDENTITY   /*!80023 INVISIBLE */,
  email varchar(255) NOT NULL,
  token varchar(255) NOT NULL,
  created_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX password_resets_email_index ON password_resets (email);


-- prod.payment_providers definition

DROP TABLE IF EXISTS payment_providers CASCADE;

CREATE TABLE payment_providers (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  is_default boolean NOT NULL DEFAULT false,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);


-- prod.payments definition

DROP TABLE IF EXISTS payments CASCADE;

CREATE TABLE payments (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  base_cost numeric(20,0) DEFAULT NULL,
  vat_rate numeric(22,4) DEFAULT NULL,
  gross_total numeric(22,4) DEFAULT NULL,
  charge_outcome varchar(255) NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);


-- prod.permission_category definition

DROP TABLE IF EXISTS permission_category CASCADE;

CREATE TABLE permission_category (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  CONSTRAINT permission_category_name_unique UNIQUE (name)
);


-- prod.permission_groups definition

DROP TABLE IF EXISTS permission_groups CASCADE;

CREATE TABLE permission_groups (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  CONSTRAINT permission_groups_name_unique UNIQUE (name)
);


-- prod.personal_access_tokens definition

DROP TABLE IF EXISTS personal_access_tokens CASCADE;

CREATE TABLE personal_access_tokens (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  tokenable_type varchar(255) NOT NULL,
  tokenable_id bigint NOT NULL,
  name varchar(255) NOT NULL,
  token varchar(64) NOT NULL,
  abilities text,
  last_used_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  CONSTRAINT personal_access_tokens_token_unique UNIQUE (token)
);
CREATE INDEX personal_access_tokens_tokenable_type_tokenable_id_index ON personal_access_tokens (tokenable_type, tokenable_id);


-- prod.profile_approval_status definition

DROP TABLE IF EXISTS profile_approval_status CASCADE;

CREATE TABLE profile_approval_status (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);


-- prod.provider_types definition

DROP TABLE IF EXISTS provider_types CASCADE;

CREATE TABLE provider_types (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  details text,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);


-- prod.purpose_credit_types definition

DROP TABLE IF EXISTS purpose_credit_types CASCADE;

CREATE TABLE purpose_credit_types (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);


-- prod.quotes_status definition

DROP TABLE IF EXISTS quotes_status CASCADE;

CREATE TABLE quotes_status (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);


-- prod.roles definition

DROP TABLE IF EXISTS roles CASCADE;

CREATE TABLE roles (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  guard_name varchar(255) NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  CONSTRAINT roles_name_guard_name_unique UNIQUE (name,guard_name)
);


-- prod.sharepoint_updates_timestamps definition

DROP TABLE IF EXISTS sharepoint_updates_timestamps CASCADE;

CREATE TABLE sharepoint_updates_timestamps (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  last_update timestamp without time zone NOT NULL,
  change_token varchar(255) NOT NULL
);


-- prod.stripe_settings definition

DROP TABLE IF EXISTS stripe_settings CASCADE;

CREATE TABLE stripe_settings (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  stripe_key varchar(255) NOT NULL,
  stripe_secret varchar(255) NOT NULL,
  stripe_webhook_secret varchar(255) NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);


-- prod.systems_deal_setting_groups definition

DROP TABLE IF EXISTS systems_deal_setting_groups CASCADE;

CREATE TABLE systems_deal_setting_groups (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name text NOT NULL,
  order_id bigint NOT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);


-- prod.use_type definition

DROP TABLE IF EXISTS use_type CASCADE;

CREATE TABLE use_type (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);


-- prod.user_types definition

DROP TABLE IF EXISTS user_types CASCADE;

CREATE TABLE user_types (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  role_id bigint DEFAULT NULL,
  name varchar(255) NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  is_admin smallint NOT NULL DEFAULT 0,
  deleted_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX user_types_role_id_foreign ON user_types (role_id);


-- prod.valuation_statuses definition

DROP TABLE IF EXISTS valuation_statuses CASCADE;

CREATE TABLE valuation_statuses (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);


-- prod.variable_rate_settings definition

DROP TABLE IF EXISTS variable_rate_settings CASCADE;

CREATE TABLE variable_rate_settings (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  value numeric(22,4) DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);


-- prod.variable_rate_sources definition

DROP TABLE IF EXISTS variable_rate_sources CASCADE;

CREATE TABLE variable_rate_sources (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);


-- prod.addresses definition

DROP TABLE IF EXISTS addresses CASCADE;

CREATE TABLE addresses (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  ownership_type_id bigint DEFAULT NULL,
  postcode varchar(255) DEFAULT NULL,
  country varchar(255) DEFAULT NULL,
  county varchar(255) DEFAULT NULL,
  city varchar(255) DEFAULT NULL,
  district varchar(255) DEFAULT NULL,
  street varchar(255) DEFAULT NULL,
  house_number varchar(255) DEFAULT NULL,
  lived_for_months integer DEFAULT NULL,
  lived_for_years integer DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX client_addresses_ownership_type_id_foreign ON addresses (ownership_type_id);


-- prod.attribute_groups definition

DROP TABLE IF EXISTS attribute_groups CASCADE;

CREATE TABLE attribute_groups (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  attribute_entity_id bigint DEFAULT NULL,
  name varchar(255) NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  CONSTRAINT attribute_groups_name_unique UNIQUE (name)
);
CREATE INDEX attribute_groups_attribute_entity_id_foreign ON attribute_groups (attribute_entity_id);


-- prod.`attributes` definition

DROP TABLE IF EXISTS attributes CASCADE;

CREATE TABLE attributes (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  parent_id varchar(255) DEFAULT NULL,
  attribute_batch varchar(255) NOT NULL DEFAULT '0',
  attribute_group_id bigint NOT NULL,
  attribute_type_id bigint NOT NULL,
  reference varchar(255) NOT NULL,
  is_system_attribute smallint NOT NULL DEFAULT 0,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  field_name varchar(255) NOT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX attributes_attribute_group_id_foreign ON attributes (attribute_group_id);
CREATE INDEX attributes_attribute_type_id_foreign ON attributes (attribute_type_id);


-- prod.brokers definition

DROP TABLE IF EXISTS brokers CASCADE;

CREATE TABLE brokers (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  email varchar(255) NOT NULL,
  phone varchar(255) NOT NULL,
  commission_rate numeric(22,4) DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  engagement_letter date DEFAULT NULL,
  address_id bigint DEFAULT NULL,
  landline varchar(255) DEFAULT NULL,
  mobile varchar(255) DEFAULT NULL,
  location text,
  secondary_phone varchar(255) DEFAULT NULL,
  bank_details_id bigint DEFAULT NULL,
  point_of_contact_name varchar(255) DEFAULT NULL
);
CREATE INDEX brokers_address_id_foreign ON brokers (address_id);
CREATE INDEX brokers_bank_details_id_foreign ON brokers (bank_details_id);


-- prod.client_companies definition

DROP TABLE IF EXISTS client_companies CASCADE;

CREATE TABLE client_companies (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  company_id bigint NOT NULL,
  name varchar(255) NOT NULL,
  email varchar(255) DEFAULT NULL,
  phone varchar(255) DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  address_id bigint DEFAULT NULL,
  landline varchar(255) DEFAULT NULL,
  mobile varchar(255) DEFAULT NULL,
  bank_details text,
  bank_details_id bigint DEFAULT NULL
);
CREATE INDEX client_companies_company_id_foreign ON client_companies (company_id);
CREATE INDEX client_companies_address_id_foreign ON client_companies (address_id);
CREATE INDEX client_companies_bank_details_id_foreign ON client_companies (bank_details_id);


-- prod.client_groups definition

DROP TABLE IF EXISTS client_groups CASCADE;

CREATE TABLE client_groups (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  company_id bigint NOT NULL,
  name varchar(255) NOT NULL,
  email varchar(255) DEFAULT NULL,
  phone varchar(255) DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  landline varchar(255) DEFAULT NULL,
  mobile varchar(255) DEFAULT NULL,
  bank_details text,
  address_id bigint DEFAULT NULL,
  bank_details_id bigint DEFAULT NULL
);
CREATE INDEX client_groups_company_id_foreign ON client_groups (company_id);
CREATE INDEX client_groups_address_id_foreign ON client_groups (address_id);
CREATE INDEX client_groups_bank_details_id_foreign ON client_groups (bank_details_id);


-- prod.documents definition

DROP TABLE IF EXISTS documents CASCADE;

CREATE TABLE documents (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  filename varchar(255) NOT NULL,
  document_type_id bigint NOT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX documents_document_type_id_foreign ON documents (document_type_id);


-- prod.drawdown_event_type definition

DROP TABLE IF EXISTS drawdown_event_type CASCADE;

CREATE TABLE drawdown_event_type (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  drawdown_event_amount_type_id bigint NOT NULL,
  name varchar(255) NOT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  enabled_to_schedule_before smallint NOT NULL DEFAULT 1
);
CREATE INDEX drawdown_event_type_drawdown_event_amount_type_id_foreign ON drawdown_event_type (drawdown_event_amount_type_id);


-- prod.fee_type_lending_type definition

DROP TABLE IF EXISTS fee_type_lending_type CASCADE;

CREATE TABLE fee_type_lending_type (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  fee_type_id bigint NOT NULL,
  lending_type_id bigint NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  CONSTRAINT fee_type_lending_type_fee_type_id_lending_type_id_unique UNIQUE (fee_type_id,lending_type_id)
);
CREATE INDEX fee_type_lending_type_lending_type_id_foreign ON fee_type_lending_type (lending_type_id);


-- prod.introducers definition

DROP TABLE IF EXISTS introducers CASCADE;

CREATE TABLE introducers (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  company varchar(255) DEFAULT NULL,
  contact varchar(255) NOT NULL,
  email varchar(255) NOT NULL,
  phone varchar(255) NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  introducer_type_id bigint DEFAULT NULL
);
CREATE INDEX introducers_introducer_type_id_foreign ON introducers (introducer_type_id);


-- prod.lenders definition

DROP TABLE IF EXISTS lenders CASCADE;

CREATE TABLE lenders (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  historical integer NOT NULL DEFAULT 0,
  stripe_settings_id bigint DEFAULT NULL
);
CREATE INDEX lenders_stripe_settings_id_foreign ON lenders (stripe_settings_id);


-- prod.model_has_roles definition

DROP TABLE IF EXISTS model_has_roles CASCADE;

CREATE TABLE model_has_roles (
  role_id bigint NOT NULL,
  model_type varchar(255) NOT NULL,
  model_id bigint NOT NULL
);
CREATE INDEX model_has_roles_model_id_model_type_index ON model_has_roles (model_id, model_type);


-- prod.payment_attempts definition

DROP TABLE IF EXISTS payment_attempts CASCADE;

CREATE TABLE payment_attempts (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  payment_id bigint NOT NULL,
  amount decimal(22,4) DEFAULT NULL,
  status integer NOT NULL,
  error_message varchar(255) DEFAULT NULL,
  payment_method_id bigint NOT NULL,
  payment_intent_id varchar(255) DEFAULT NULL,
  payment_reference varchar(255) DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX payment_attempts_payment_id_foreign ON payment_attempts (payment_id);
CREATE INDEX payment_attempts_payment_method_id_foreign ON payment_attempts (payment_method_id);


-- prod.permissions definition

DROP TABLE IF EXISTS permissions CASCADE;

CREATE TABLE permissions (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  guard_name varchar(255) NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  permission_category_id bigint DEFAULT NULL,
  parent_id bigint DEFAULT NULL,
  CONSTRAINT permissions_name_guard_name_unique UNIQUE (name,guard_name)
);
CREATE INDEX permissions_permission_category_id_foreign ON permissions (permission_category_id);
CREATE INDEX permissions_parent_id_foreign ON permissions (parent_id);


-- prod.role_has_permissions definition

DROP TABLE IF EXISTS role_has_permissions CASCADE;

CREATE TABLE role_has_permissions (
  permission_id bigint NOT NULL,
  role_id bigint NOT NULL
);
CREATE INDEX role_has_permissions_role_id_foreign ON role_has_permissions (role_id);


-- prod.service_providers definition

DROP TABLE IF EXISTS service_providers CASCADE;

CREATE TABLE service_providers (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  provider_type_id bigint NOT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  forename varchar(255) DEFAULT NULL,
  surname varchar(255) DEFAULT NULL,
  company varchar(255) DEFAULT NULL,
  email varchar(255) DEFAULT NULL,
  phone varchar(255) DEFAULT NULL,
  engagement_letter date DEFAULT NULL
);
CREATE INDEX service_providers_provider_type_id_foreign ON service_providers (provider_type_id);


-- prod.systems_deal_setting definition

DROP TABLE IF EXISTS systems_deal_setting CASCADE;

CREATE TABLE systems_deal_setting (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name text NOT NULL,
  order_id bigint NOT NULL,
  systems_deal_setting_group_id bigint NOT NULL,
  status smallint NOT NULL DEFAULT 0,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX systems_deal_setting_systems_deal_setting_group_id_foreign ON systems_deal_setting (systems_deal_setting_group_id);


-- prod.task_group definition

DROP TABLE IF EXISTS task_group CASCADE;

CREATE TABLE task_group (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  lending_type_id bigint DEFAULT NULL,
  name varchar(255) NOT NULL,
  order_id bigint NOT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX task_group_lending_type_id_foreign ON task_group (lending_type_id);


-- prod.variable_rates definition

DROP TABLE IF EXISTS variable_rates CASCADE;

CREATE TABLE variable_rates (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  variable_rate_source_id bigint NOT NULL,
  parent_id bigint DEFAULT NULL,
  rate numeric(22,4) DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX variable_rates_variable_rate_source_id_foreign ON variable_rates (variable_rate_source_id);
CREATE INDEX variable_rates_parent_id_foreign ON variable_rates (parent_id);


-- prod.variable_rates_history definition

DROP TABLE IF EXISTS variable_rates_history CASCADE;

CREATE TABLE variable_rates_history (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  date date NOT NULL,
  variable_rate_source_id bigint NOT NULL,
  rate numeric(22,4) DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX variable_rates_history_variable_rate_source_id_foreign ON variable_rates_history (variable_rate_source_id);


-- prod.variable_rates_history_copy1 definition

DROP TABLE IF EXISTS variable_rates_history_copy1 CASCADE;

CREATE TABLE variable_rates_history_copy1 (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  date date NOT NULL,
  variable_rate_source_id bigint NOT NULL,
  rate numeric(12,2) NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX variable_rates_history_copy1_variable_rate_source_id_foreign ON variable_rates_history_copy1 (variable_rate_source_id);


-- prod.lender_funder_interest_rate definition

DROP TABLE IF EXISTS lender_funder_interest_rate CASCADE;

CREATE TABLE lender_funder_interest_rate (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  lender_id bigint NOT NULL,
  interest_rate numeric(8,2) NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX lender_funder_interest_rate_lender_id_foreign ON lender_funder_interest_rate (lender_id);


-- prod.model_has_permissions definition

DROP TABLE IF EXISTS model_has_permissions CASCADE;

CREATE TABLE model_has_permissions (
  permission_id bigint NOT NULL,
  model_type varchar(255) NOT NULL,
  model_id bigint NOT NULL
);
CREATE INDEX model_has_permissions_model_id_model_type_index ON model_has_permissions (model_id, model_type);


-- prod.permission_group_permission definition

DROP TABLE IF EXISTS permission_group_permission CASCADE;

CREATE TABLE permission_group_permission (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  permission_group_id bigint NOT NULL,
  permission_id bigint NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX permission_group_permission_permission_group_id_foreign ON permission_group_permission (permission_group_id);
CREATE INDEX permission_group_permission_permission_id_foreign ON permission_group_permission (permission_id);


-- prod.task definition

DROP TABLE IF EXISTS task CASCADE;

CREATE TABLE task (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  order_id bigint NOT NULL,
  task_group_id bigint NOT NULL,
  auto_assign_to_case_owner smallint NOT NULL DEFAULT 0,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX task_task_group_id_foreign ON task (task_group_id);


-- prod.assets definition

DROP TABLE IF EXISTS assets CASCADE;

CREATE TABLE assets (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  asset_type_id bigint NOT NULL,
  client_group_id bigint DEFAULT NULL,
  name varchar(255) NOT NULL,
  security boolean NOT NULL DEFAULT false,
  jointly_owned boolean DEFAULT false,
  independent_valuation numeric(22,4) DEFAULT NULL,
  internal_valuation numeric(22,4) DEFAULT NULL,
  asset_description text,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  asset_address_id bigint DEFAULT NULL,
  deal_id bigint DEFAULT NULL,
  use_type_id bigint DEFAULT NULL,
  insurance_expiry_date timestamp without time zone DEFAULT NULL
);
CREATE INDEX assets_asset_type_id_foreign ON assets (asset_type_id);
CREATE INDEX assets_client_group_id_foreign ON assets (client_group_id);
CREATE INDEX assets_asset_address_id_foreign ON assets (asset_address_id);
CREATE INDEX assets_use_type_id_foreign ON assets (use_type_id);
CREATE INDEX assets_deal_id_foreign ON assets (deal_id);


-- prod.asset_insurances definition

DROP TABLE IF EXISTS asset_insurances CASCADE;

CREATE TABLE asset_insurances (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  asset_id bigint DEFAULT NULL,
  policy_number varchar(255) NOT NULL,
  is_novellus_nominated_payee boolean NOT NULL,
  type_loss_payee text NOT NULL CHECK (type_loss_payee IN ('sole','joint','composite','co-insured','first')),
  expiry_date date NOT NULL,
  sum_insured decimal(22,4) DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  asset_insurance_type_id bigint NOT NULL DEFAULT 1
);
CREATE INDEX asset_insurances_asset_id_foreign ON asset_insurances (asset_id);
CREATE INDEX asset_insurances_asset_insurance_type_id_foreign ON asset_insurances (asset_insurance_type_id);


-- prod.asset_insurance_notes definition

DROP TABLE IF EXISTS asset_insurance_notes CASCADE;

CREATE TABLE asset_insurance_notes (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  asset_insurance_id bigint NOT NULL,
  note_id bigint NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX asset_insurance_notes_asset_insurance_id_foreign ON asset_insurance_notes (asset_insurance_id);
CREATE INDEX asset_insurance_notes_note_id_foreign ON asset_insurance_notes (note_id);


-- prod.asset_client_individuals definition

DROP TABLE IF EXISTS asset_client_individuals CASCADE;

CREATE TABLE asset_client_individuals (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  asset_id bigint NOT NULL,
  client_individual_id bigint NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX asset_client_individuals_asset_id_foreign ON asset_client_individuals (asset_id);
CREATE INDEX asset_client_individuals_client_individual_id_foreign ON asset_client_individuals (client_individual_id);


-- prod.asset_client_companies definition

DROP TABLE IF EXISTS asset_client_companies CASCADE;

CREATE TABLE asset_client_companies (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  asset_id bigint NOT NULL,
  client_company_id bigint NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX asset_client_companies_asset_id_foreign ON asset_client_companies (asset_id);


-- prod.attribute_values definition

DROP TABLE IF EXISTS attribute_values CASCADE;

CREATE TABLE attribute_values (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  client_form_id bigint NOT NULL,
  attribute_id bigint NOT NULL,
  value varchar(255) NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX attribute_values_attribute_id_foreign ON attribute_values (attribute_id);
CREATE INDEX attribute_values_client_form_id_foreign ON attribute_values (client_form_id);


-- prod.audit definition

DROP TABLE IF EXISTS audit CASCADE;

CREATE TABLE audit (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  user_id bigint NOT NULL,
  model varchar(255) NOT NULL,
  model_id bigint NOT NULL,
  deal_id bigint DEFAULT NULL,
  event_group_id varchar(255) NOT NULL,
  event_type varchar(255) NOT NULL,
  record_created integer DEFAULT NULL,
  field varchar(255) DEFAULT NULL,
  field_name varchar(255) DEFAULT NULL,
  from_data varchar(255) DEFAULT NULL,
  from_data_text varchar(255) DEFAULT NULL,
  to_data varchar(255) DEFAULT NULL,
  to_data_text varchar(255) DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX audit_user_id_foreign ON audit (user_id);
CREATE INDEX audit_deal_id_foreign ON audit (deal_id);


-- prod.borrowers definition

DROP TABLE IF EXISTS borrowers CASCADE;

CREATE TABLE borrowers (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  deal_id bigint NOT NULL,
  client_individual_id bigint DEFAULT NULL,
  client_company_id bigint DEFAULT NULL,
  client_group_id bigint DEFAULT NULL,
  admin_id bigint DEFAULT NULL,
  guarantor_individual_id bigint DEFAULT NULL,
  guarantor_corporate_id bigint DEFAULT NULL,
  main_contact smallint NOT NULL DEFAULT 0,
  administrator smallint NOT NULL DEFAULT 0,
  guarantor smallint NOT NULL DEFAULT 0,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX borrowers_deal_id_foreign ON borrowers (deal_id);
CREATE INDEX borrowers_client_individual_id_foreign ON borrowers (client_individual_id);
CREATE INDEX borrowers_client_company_id_foreign ON borrowers (client_company_id);
CREATE INDEX borrowers_client_group_id_foreign ON borrowers (client_group_id);
CREATE INDEX borrowers_admin_id_foreign ON borrowers (admin_id);
CREATE INDEX borrowers_guarantor_individual_id_foreign ON borrowers (guarantor_individual_id);
CREATE INDEX borrowers_guarantor_corporate_id_foreign ON borrowers (guarantor_corporate_id);


-- prod.broker_agent_deals definition

DROP TABLE IF EXISTS broker_agent_deals CASCADE;

CREATE TABLE broker_agent_deals (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  broker_agent_id bigint NOT NULL,
  broker_agent_main_contact integer NOT NULL DEFAULT 0,
  deal_id bigint NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX broker_agent_deals_broker_agent_id_foreign ON broker_agent_deals (broker_agent_id);
CREATE INDEX broker_agent_deals_deal_id_foreign ON broker_agent_deals (deal_id);


-- prod.broker_agent_notes definition

DROP TABLE IF EXISTS broker_agent_notes CASCADE;

CREATE TABLE broker_agent_notes (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  broker_agent_id bigint NOT NULL,
  note_id bigint NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  negative_relationship smallint DEFAULT 0
);
CREATE INDEX broker_agent_notes_broker_agent_id_foreign ON broker_agent_notes (broker_agent_id);
CREATE INDEX broker_agent_notes_note_id_foreign ON broker_agent_notes (note_id);


-- prod.broker_agents definition

DROP TABLE IF EXISTS broker_agents CASCADE;

CREATE TABLE broker_agents (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  broker_id bigint NOT NULL,
  user_id bigint NOT NULL,
  name varchar(255) NOT NULL,
  email varchar(255) NOT NULL,
  phone varchar(255) NOT NULL,
  bank_details_id bigint DEFAULT NULL,
  questionable boolean NOT NULL DEFAULT false,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  address_id bigint DEFAULT NULL,
  landline varchar(255) DEFAULT NULL,
  mobile varchar(255) DEFAULT NULL
);
CREATE INDEX broker_agents_user_id_foreign ON broker_agents (user_id);
CREATE INDEX broker_agents_broker_id_foreign ON broker_agents (broker_id);
CREATE INDEX broker_agents_address_id_foreign ON broker_agents (address_id);
CREATE INDEX broker_agents_bank_details_id_foreign ON broker_agents (bank_details_id);


-- prod.broker_notes definition

DROP TABLE IF EXISTS broker_notes CASCADE;

CREATE TABLE broker_notes (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  broker_id bigint NOT NULL,
  note_id bigint NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX broker_notes_broker_id_foreign ON broker_notes (broker_id);
CREATE INDEX broker_notes_note_id_foreign ON broker_notes (note_id);


-- prod.ccr_reports definition

DROP TABLE IF EXISTS ccr_reports CASCADE;

CREATE TABLE ccr_reports (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  title varchar(255) NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  file_id bigint DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX ccr_reports_file_id_foreign ON ccr_reports (file_id);


-- prod.charges definition

DROP TABLE IF EXISTS charges CASCADE;

CREATE TABLE charges (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  parent_id bigint DEFAULT NULL,
  charge numeric(22,4) DEFAULT NULL,
  date date NOT NULL,
  note text NOT NULL,
  removed boolean NOT NULL DEFAULT false,
  asset_id bigint NOT NULL,
  lender_id bigint NOT NULL,
  charge_type_id bigint NOT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX charges_lender_id_foreign ON charges (lender_id);
CREATE INDEX charges_charge_type_id_foreign ON charges (charge_type_id);
CREATE INDEX charges_parent_id_foreign ON charges (parent_id);
CREATE INDEX charges_asset_id_foreign ON charges (asset_id);


-- prod.client_company_clients definition

DROP TABLE IF EXISTS client_company_clients CASCADE;

CREATE TABLE client_company_clients (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  client_company_id bigint NOT NULL,
  client_individual_id bigint NOT NULL,
  shareholding_percentage numeric(22,4) DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX client_company_clients_client_company_id_foreign ON client_company_clients (client_company_id);
CREATE INDEX client_company_clients_client_individual_id_foreign ON client_company_clients (client_individual_id);


-- prod.client_company_notes definition

DROP TABLE IF EXISTS client_company_notes CASCADE;

CREATE TABLE client_company_notes (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  client_company_id bigint NOT NULL,
  note_id bigint NOT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX client_company_notes_client_company_id_foreign ON client_company_notes (client_company_id);
CREATE INDEX client_company_notes_note_id_foreign ON client_company_notes (note_id);


-- prod.client_form_attachments definition

DROP TABLE IF EXISTS client_form_attachments CASCADE;

CREATE TABLE client_form_attachments (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  client_form_id bigint NOT NULL,
  file_id bigint NOT NULL,
  form_attribute_reference varchar(255) NOT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX client_form_attachments_client_form_id_foreign ON client_form_attachments (client_form_id);
CREATE INDEX client_form_attachments_file_id_foreign ON client_form_attachments (file_id);


-- prod.client_forms definition

DROP TABLE IF EXISTS client_forms CASCADE;

CREATE TABLE client_forms (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  client_form_hash varchar(255) DEFAULT NULL,
  form_id bigint NOT NULL,
  client_form_batch_id varchar(255) DEFAULT NULL,
  paid smallint NOT NULL DEFAULT 0,
  deal_id bigint DEFAULT NULL,
  broker_agent_id bigint DEFAULT NULL,
  main_recipient smallint NOT NULL DEFAULT 0,
  client_id bigint DEFAULT NULL,
  client_company_id bigint DEFAULT NULL,
  client_group_id bigint DEFAULT NULL,
  form_data_json jsonb,
  sent_by_user_id bigint DEFAULT NULL,
  form_sent_at timestamp without time zone DEFAULT NULL,
  form_populated_at timestamp without time zone DEFAULT NULL,
  form_completed_at timestamp without time zone DEFAULT NULL,
  docusign_document_sent numeric(20,0) DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  client_form_status_id bigint DEFAULT NULL,
  docusign_envelope_id varchar(255) DEFAULT NULL,
  docusign_completed_datetime date DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX client_forms_form_id_foreign ON client_forms (form_id);
CREATE INDEX client_forms_client_id_foreign ON client_forms (client_id);
CREATE INDEX client_forms_client_company_id_foreign ON client_forms (client_company_id);
CREATE INDEX client_forms_client_group_id_foreign ON client_forms (client_group_id);
CREATE INDEX client_forms_client_form_status_id_foreign ON client_forms (client_form_status_id);
CREATE INDEX client_forms_broker_agent_id_foreign ON client_forms (broker_agent_id);
CREATE INDEX client_forms_deal_id_foreign ON client_forms (deal_id);
CREATE INDEX client_forms_sent_by_user_id_foreign ON client_forms (sent_by_user_id);


-- prod.client_group_clients definition

DROP TABLE IF EXISTS client_group_clients CASCADE;

CREATE TABLE client_group_clients (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  client_group_id bigint NOT NULL,
  client_company_id bigint DEFAULT NULL,
  client_individual_id bigint DEFAULT NULL,
  group_leader integer NOT NULL DEFAULT 0,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX client_group_clients_client_group_id_foreign ON client_group_clients (client_group_id);
CREATE INDEX client_group_clients_client_company_id_foreign ON client_group_clients (client_company_id);
CREATE INDEX client_group_clients_client_individual_id_foreign ON client_group_clients (client_individual_id);


-- prod.client_individual_credit_data definition

DROP TABLE IF EXISTS client_individual_credit_data CASCADE;

CREATE TABLE client_individual_credit_data (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  client_individual_id bigint NOT NULL,
  input_dob date DEFAULT NULL,
  input_name varchar(255) DEFAULT NULL,
  input_surname varchar(255) DEFAULT NULL,
  input_county varchar(255) NOT NULL DEFAULT 'Co. Galway',
  risk_factor varchar(255) DEFAULT NULL,
  num_defaulter integer DEFAULT NULL,
  num_drn integer DEFAULT NULL,
  num_shareholding integer DEFAULT NULL,
  num_pia integer DEFAULT NULL,
  num_directorship_prev integer DEFAULT NULL,
  num_disqualification integer DEFAULT NULL,
  num_pc integer DEFAULT NULL,
  num_directorship integer DEFAULT NULL,
  num_bankruptcy integer NOT NULL DEFAULT 0,
  num_dsa integer NOT NULL DEFAULT 0,
  num_judgment integer NOT NULL DEFAULT 0,
  num_business_name integer NOT NULL DEFAULT 0,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX client_individual_credit_data_client_individual_id_foreign ON client_individual_credit_data (client_individual_id);


-- prod.client_individual_notes definition

DROP TABLE IF EXISTS client_individual_notes CASCADE;

CREATE TABLE client_individual_notes (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  client_individual_id bigint NOT NULL,
  note_id bigint NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX client_individual_notes_client_individual_id_foreign ON client_individual_notes (client_individual_id);
CREATE INDEX client_individual_notes_note_id_foreign ON client_individual_notes (note_id);


-- prod.client_individuals definition

DROP TABLE IF EXISTS client_individuals CASCADE;

CREATE TABLE client_individuals (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  address_id bigint DEFAULT NULL,
  previous_address_id bigint DEFAULT NULL,
  user_id bigint NOT NULL,
  permanent_uk_resident boolean NOT NULL DEFAULT true,
  name_title_id bigint DEFAULT NULL,
  marital_status_id bigint DEFAULT NULL,
  total_gross_income numeric(22,4) DEFAULT NULL,
  employment_status varchar(255) DEFAULT NULL,
  residency_status varchar(255) DEFAULT NULL,
  job_title varchar(255) DEFAULT NULL,
  nature_of_business varchar(255) DEFAULT NULL,
  employer_name varchar(255) DEFAULT NULL,
  passport_number varchar(255) DEFAULT NULL,
  is_administrator_only boolean NOT NULL DEFAULT false,
  dob_day varchar(255) DEFAULT NULL,
  dob_month varchar(255) DEFAULT NULL,
  dob_year varchar(255) DEFAULT NULL,
  previous_names varchar(255) DEFAULT NULL,
  nationality varchar(255) DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX client_individuals_user_id_foreign ON client_individuals (user_id);
CREATE INDEX client_individuals_marital_status_id_foreign ON client_individuals (marital_status_id);
CREATE INDEX client_individuals_name_title_id_foreign ON client_individuals (name_title_id);
CREATE INDEX client_individuals_address_id_foreign ON client_individuals (address_id);


-- prod.deal_activities definition

DROP TABLE IF EXISTS deal_activities CASCADE;

CREATE TABLE deal_activities (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  deal_id bigint NOT NULL,
  note text,
  user_id bigint NOT NULL,
  audit_id bigint DEFAULT NULL,
  file_id bigint DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  date date NOT NULL,
  time_taken time NOT NULL
);
CREATE INDEX deal_activities_deal_id_foreign ON deal_activities (deal_id);
CREATE INDEX deal_activities_user_id_foreign ON deal_activities (user_id);
CREATE INDEX deal_activities_audit_id_foreign ON deal_activities (audit_id);
CREATE INDEX deal_activities_file_id_foreign ON deal_activities (file_id);


-- prod.deal_document_categories definition

DROP TABLE IF EXISTS deal_document_categories CASCADE;

CREATE TABLE deal_document_categories (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  sharepoint_unique_id varchar(1024) DEFAULT NULL,
  folder_path varchar(1024) DEFAULT NULL,
  parent_id bigint DEFAULT NULL,
  name varchar(255) NOT NULL,
  file_count integer DEFAULT NULL,
  deal_id bigint DEFAULT NULL,
  size integer DEFAULT NULL,
  last_updated timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX deal_document_categories_parent_id_foreign ON deal_document_categories (parent_id);
CREATE INDEX deal_document_categories_deal_id_foreign ON deal_document_categories (deal_id);


-- prod.deal_document_categories_data definition

DROP TABLE IF EXISTS deal_document_categories_data CASCADE;

CREATE TABLE deal_document_categories_data (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  deal_id bigint NOT NULL,
  deal_document_category_id bigint NOT NULL,
  file_count integer DEFAULT NULL,
  size integer DEFAULT NULL,
  last_updated timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX deal_document_categories_data_deal_id_foreign ON deal_document_categories_data (deal_id);
CREATE INDEX deal_document_categories_data_deal_document_category_id_foreign ON deal_document_categories_data (deal_document_category_id);


-- prod.deal_documents definition

DROP TABLE IF EXISTS deal_documents CASCADE;

CREATE TABLE deal_documents (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  deal_id bigint NOT NULL,
  file_id bigint NOT NULL,
  deal_document_category_id bigint NOT NULL,
  borrower_id bigint DEFAULT NULL,
  client_company_id bigint DEFAULT NULL,
  deal_document_risk_id bigint DEFAULT NULL,
  client_individual_id bigint DEFAULT NULL,
  asset_id bigint DEFAULT NULL,
  description text,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX deal_documents_file_id_foreign ON deal_documents (file_id);
CREATE INDEX deal_documents_deal_document_category_id_foreign ON deal_documents (deal_document_category_id);
CREATE INDEX deal_documents_borrower_id_foreign ON deal_documents (borrower_id);
CREATE INDEX deal_documents_client_individual_id_foreign ON deal_documents (client_individual_id);
CREATE INDEX deal_documents_asset_id_foreign ON deal_documents (asset_id);
CREATE INDEX deal_documents_deal_id_foreign ON deal_documents (deal_id);
CREATE INDEX deal_documents_client_company_id_foreign ON deal_documents (client_company_id);
CREATE INDEX deal_documents_deal_document_risk_id_foreign ON deal_documents (deal_document_risk_id);


-- prod.deal_introducers definition

DROP TABLE IF EXISTS deal_introducers CASCADE;

CREATE TABLE deal_introducers (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  introducer_id bigint DEFAULT NULL,
  deal_id bigint NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  broker_id bigint DEFAULT NULL,
  introducer_type_id bigint DEFAULT NULL
);
CREATE INDEX deal_introducers_introducer_id_foreign ON deal_introducers (introducer_id);
CREATE INDEX deal_introducers_deal_id_foreign ON deal_introducers (deal_id);
CREATE INDEX deal_introducers_broker_id_foreign ON deal_introducers (broker_id);
CREATE INDEX deal_introducers_introducer_type_id_foreign ON deal_introducers (introducer_type_id);


-- prod.deal_notes definition

DROP TABLE IF EXISTS deal_notes CASCADE;

CREATE TABLE deal_notes (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  deal_id bigint NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  replied_to_id bigint DEFAULT NULL,
  created_by_user_id bigint DEFAULT NULL,
  important boolean NOT NULL DEFAULT false,
  note text
);
CREATE INDEX deal_notes_deal_id_foreign ON deal_notes (deal_id);
CREATE INDEX deal_notes_replied_to_id_foreign ON deal_notes (replied_to_id);
CREATE INDEX deal_notes_created_by_user_id_foreign ON deal_notes (created_by_user_id);


-- prod.deal_notification_rules definition

DROP TABLE IF EXISTS deal_notification_rules CASCADE;

CREATE TABLE deal_notification_rules (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  deal_id bigint NOT NULL,
  drawdown_event_type_id bigint DEFAULT NULL,
  file_id bigint DEFAULT NULL,
  notification_rule_id bigint DEFAULT NULL,
  scheduled_for integer DEFAULT NULL,
  interval_type varchar(255) DEFAULT NULL,
  subject varchar(255) DEFAULT NULL,
  body text,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  scheduled_date date DEFAULT NULL,
  notification_template_id bigint DEFAULT NULL
);
CREATE INDEX deal_notification_rules_notification_rule_id_foreign ON deal_notification_rules (notification_rule_id);
CREATE INDEX deal_notification_rules_deal_id_foreign ON deal_notification_rules (deal_id);
CREATE INDEX deal_notification_rules_drawdown_event_type_id_foreign ON deal_notification_rules (drawdown_event_type_id);
CREATE INDEX deal_notification_rules_file_id_foreign ON deal_notification_rules (file_id);
CREATE INDEX deal_notification_rules_notification_template_id_foreign ON deal_notification_rules (notification_template_id);


-- prod.deal_notification_rules_recipients definition

DROP TABLE IF EXISTS deal_notification_rules_recipients CASCADE;

CREATE TABLE deal_notification_rules_recipients (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  deal_notification_rule_id bigint NOT NULL,
  client_individual_id bigint NOT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX fk_deal_noti_rule_id ON deal_notification_rules_recipients (deal_notification_rule_id);
CREATE INDEX deal_notification_rules_recipients_client_individual_id_foreign ON deal_notification_rules_recipients (client_individual_id);


-- prod.deal_rate_floors definition

DROP TABLE IF EXISTS deal_rate_floors CASCADE;

CREATE TABLE deal_rate_floors (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  variable_source_id bigint NOT NULL,
  deal_id bigint NOT NULL,
  floor_rate numeric(22,4) DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX deal_rate_floors_variable_source_id_foreign ON deal_rate_floors (variable_source_id);
CREATE INDEX deal_rate_floors_deal_id_foreign ON deal_rate_floors (deal_id);


-- prod.deal_setting_groups definition

DROP TABLE IF EXISTS deal_setting_groups CASCADE;

CREATE TABLE deal_setting_groups (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name text NOT NULL,
  order_id bigint NOT NULL,
  deal_id bigint NOT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX deal_setting_groups_deal_id_foreign ON deal_setting_groups (deal_id);


-- prod.deal_settings definition

DROP TABLE IF EXISTS deal_settings CASCADE;

CREATE TABLE deal_settings (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name text NOT NULL,
  status smallint NOT NULL DEFAULT 0,
  order_id bigint NOT NULL,
  deal_setting_group_id bigint NOT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX deal_settings_deal_setting_group_id_foreign ON deal_settings (deal_setting_group_id);


-- prod.deal_task definition

DROP TABLE IF EXISTS deal_task CASCADE;

CREATE TABLE deal_task (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  complete smallint NOT NULL DEFAULT 0,
  order_id bigint NOT NULL,
  deal_task_group_id bigint NOT NULL,
  actioned_by_user_id bigint DEFAULT NULL,
  assigned_to_user_id bigint DEFAULT NULL,
  date_due date DEFAULT NULL,
  date timestamp without time zone DEFAULT NULL,
  auto_assign_to_case_owner smallint NOT NULL DEFAULT 0,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  na boolean NOT NULL DEFAULT false
);
CREATE INDEX deal_task_deal_task_group_id_foreign ON deal_task (deal_task_group_id);
CREATE INDEX deal_task_actioned_by_user_id_foreign ON deal_task (actioned_by_user_id);
CREATE INDEX deal_task_assigned_to_user_id_foreign ON deal_task (assigned_to_user_id);


-- prod.deal_task_group definition

DROP TABLE IF EXISTS deal_task_group CASCADE;

CREATE TABLE deal_task_group (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  order_id bigint NOT NULL,
  deal_id bigint NOT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX deal_task_group_deal_id_foreign ON deal_task_group (deal_id);


-- prod.deals definition

DROP TABLE IF EXISTS deals CASCADE;

CREATE TABLE deals (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) DEFAULT NULL,
  parent_id bigint DEFAULT NULL,
  case_owner_id bigint DEFAULT NULL,
  reference varchar(255) NOT NULL,
  type_id bigint DEFAULT NULL,
  guarantor_id bigint DEFAULT NULL,
  client_group_id bigint DEFAULT NULL,
  currency_id bigint NOT NULL,
  status_id bigint NOT NULL,
  approval_requested_by bigint DEFAULT NULL,
  approved_by bigint DEFAULT NULL,
  date_of_approval_required date DEFAULT NULL,
  date_of_approval date DEFAULT NULL,
  purpose_credit_type_id bigint DEFAULT NULL,
  base_rate_floor numeric(22,4) DEFAULT NULL,
  loan_term varchar(255) DEFAULT NULL,
  purchase_price numeric(22,4) DEFAULT NULL,
  amount_required varchar(255) DEFAULT NULL,
  max_ltv integer DEFAULT NULL,
  marketing_source_id bigint DEFAULT NULL,
  usage_details text,
  undervalue_details text,
  funds_going_to_be_used_for text,
  shortfall_balance_details text,
  exit_strategy text,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  marketing_source_utm varchar(255) DEFAULT NULL,
  marketing_campaign_utm varchar(255) DEFAULT NULL,
  aborted_reason_id bigint DEFAULT NULL,
  previous_status_id bigint DEFAULT NULL,
  estimated_sale_time date DEFAULT NULL,
  estimated_construction_time date DEFAULT NULL,
  square_footage integer DEFAULT NULL,
  price_per_square_foot decimal(22,4) DEFAULT NULL,
  private_investor boolean NOT NULL DEFAULT false,
  novellus_reference text,
  novellus_name text,
  lending_type_id bigint DEFAULT NULL,
  interest_calculation_type_id bigint DEFAULT NULL,
  interest_type_id bigint DEFAULT NULL,
  purpose_of_loan text,
  CONSTRAINT deals_name_unique UNIQUE (name)
);
CREATE INDEX deals_type_id_foreign ON deals (type_id);
CREATE INDEX deals_status_id_foreign ON deals (status_id);
CREATE INDEX deals_guarantor_id_foreign ON deals (guarantor_id);
CREATE INDEX deals_currency_id_foreign ON deals (currency_id);
CREATE INDEX deals_client_group_id_foreign ON deals (client_group_id);
CREATE INDEX deals_marketing_source_id_foreign ON deals (marketing_source_id);
CREATE INDEX deals_case_owner_id_foreign ON deals (case_owner_id);
CREATE INDEX deals_purpose_credit_type_id_foreign ON deals (purpose_credit_type_id);
CREATE INDEX deals_parent_id_foreign ON deals (parent_id);
CREATE INDEX deals_approval_requested_by_foreign ON deals (approval_requested_by);
CREATE INDEX deals_approved_by_foreign ON deals (approved_by);
CREATE INDEX deals_aborted_reason_id_foreign ON deals (aborted_reason_id);
CREATE INDEX deals_previous_status_id_foreign ON deals (previous_status_id);
CREATE INDEX deals_lending_type_id_foreign ON deals (lending_type_id);
CREATE INDEX deals_interest_calculation_type_id_foreign ON deals (interest_calculation_type_id);
CREATE INDEX deals_interest_type_id_foreign ON deals (interest_type_id);


-- prod.delegated_owners definition

DROP TABLE IF EXISTS delegated_owners CASCADE;

CREATE TABLE delegated_owners (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  deal_id bigint NOT NULL,
  user_id bigint NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX delegated_owners_user_id_foreign ON delegated_owners (user_id);
CREATE INDEX delegated_owners_deal_id_foreign ON delegated_owners (deal_id);


-- prod.drawdown_events definition

DROP TABLE IF EXISTS drawdown_events CASCADE;

CREATE TABLE drawdown_events (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  event_date date NOT NULL,
  financial_date date DEFAULT NULL,
  drawdown_id bigint NOT NULL,
  event_type_id bigint NOT NULL,
  event_status_id bigint NOT NULL,
  amount numeric(22,4) DEFAULT NULL,
  variable_rate_source_id bigint DEFAULT NULL,
  accrued_amount numeric(22,4) DEFAULT NULL,
  note text,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  end_date date DEFAULT NULL,
  amount_of_loan_in_default numeric(22,4) DEFAULT NULL,
  default_interest_rate numeric(22,4) DEFAULT NULL,
  rate_override numeric(12,4) DEFAULT NULL
);
CREATE INDEX drawdown_events_drawdown_id_foreign ON drawdown_events (drawdown_id);
CREATE INDEX drawdown_events_event_type_id_foreign ON drawdown_events (event_type_id);
CREATE INDEX drawdown_events_event_status_id_foreign ON drawdown_events (event_status_id);
CREATE INDEX drawdown_events_variable_rate_source_id_foreign ON drawdown_events (variable_rate_source_id);


-- prod.drawdown_fees definition

DROP TABLE IF EXISTS drawdown_fees CASCADE;

CREATE TABLE drawdown_fees (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  drawdown_id bigint NOT NULL,
  fee_status_id bigint NOT NULL,
  fee_type_id bigint NOT NULL,
  service_provider_id bigint DEFAULT NULL,
  currency_id bigint NOT NULL,
  broker_agent_id bigint DEFAULT NULL,
  invoice_paid_date date DEFAULT NULL,
  date date DEFAULT NULL,
  fee_amount double precision DEFAULT NULL,
  fee_amount_perc numeric(8,2) DEFAULT NULL,
  added_to_loan integer NOT NULL DEFAULT 0,
  generate_invoice boolean NOT NULL DEFAULT true,
  invoice_due_date date DEFAULT NULL,
  notes text,
  fee_interest smallint DEFAULT NULL,
  start_date date DEFAULT NULL,
  end_date date DEFAULT NULL,
  retained_from_net_advance integer NOT NULL DEFAULT 0,
  commitment_fee_refund_amount decimal(10,2) DEFAULT NULL,
  commitment_fee_refund_date date DEFAULT NULL,
  commitment_fee_refund_period integer DEFAULT NULL,
  active boolean NOT NULL DEFAULT true,
  quoted_date date DEFAULT NULL,
  quote_confirmed_date date DEFAULT NULL,
  undertaking_confirmed_date date DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX drawdown_fees_fee_status_id_foreign ON drawdown_fees (fee_status_id);
CREATE INDEX drawdown_fees_fee_type_id_foreign ON drawdown_fees (fee_type_id);
CREATE INDEX drawdown_fees_service_provider_id_foreign ON drawdown_fees (service_provider_id);
CREATE INDEX drawdown_fees_currency_id_foreign ON drawdown_fees (currency_id);
CREATE INDEX drawdown_fees_drawdown_id_foreign ON drawdown_fees (drawdown_id);
CREATE INDEX drawdown_fees_broker_agent_id_foreign ON drawdown_fees (broker_agent_id);


-- prod.drawdown_fields_approval definition

DROP TABLE IF EXISTS drawdown_fields_approval CASCADE;

CREATE TABLE drawdown_fields_approval (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  field_name varchar(255) NOT NULL,
  is_approved boolean NOT NULL DEFAULT false,
  approved_by bigint DEFAULT NULL,
  drawdown_id bigint DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX drawdown_fields_approval_approved_by_foreign ON drawdown_fields_approval (approved_by);
CREATE INDEX drawdown_fields_approval_drawdown_id_foreign ON drawdown_fields_approval (drawdown_id);


-- prod.drawdowns definition

DROP TABLE IF EXISTS drawdowns CASCADE;

CREATE TABLE drawdowns (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) NOT NULL,
  deal_id bigint NOT NULL,
  drawdown_status_id bigint DEFAULT NULL,
  lender_id bigint DEFAULT NULL,
  interest_rate numeric(22,4) DEFAULT NULL,
  redemption_date date DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  interest_calculation_type_id bigint DEFAULT NULL,
  total_net_loan numeric(22,4) DEFAULT NULL,
  gross_loan numeric(22,4) DEFAULT NULL,
  term_months integer DEFAULT NULL,
  term_days integer DEFAULT NULL,
  monthly_rate numeric(22,4) DEFAULT NULL,
  daily_rate numeric(22,4) DEFAULT NULL,
  loan_start_date date DEFAULT NULL,
  refinanced_date date DEFAULT NULL,
  refinance_gross_amount numeric(22,4) DEFAULT NULL,
  refinanced_from_id bigint DEFAULT NULL,
  refinanced_to_id bigint DEFAULT NULL,
  loan_administration_start_date date DEFAULT NULL,
  loan_end_date date DEFAULT NULL,
  deal_type_id bigint DEFAULT NULL,
  interest_type_id bigint DEFAULT NULL,
  bridging_drawdown_type_id bigint DEFAULT NULL,
  interest_subtype_id bigint DEFAULT NULL,
  max_loan_amount numeric(22,4) DEFAULT NULL,
  ltv numeric(22,4) DEFAULT NULL,
  interest_payment numeric(22,4) DEFAULT NULL,
  actual_accrued_interest_payment numeric(22,4) DEFAULT NULL,
  monthly_interest numeric(22,4) DEFAULT NULL,
  daily_interest numeric(22,4) DEFAULT NULL,
  total_net_advance numeric(22,4) DEFAULT NULL,
  total_investment numeric(22,4) DEFAULT NULL,
  estimated_return numeric(22,4) DEFAULT NULL,
  estimated_margin numeric(22,4) DEFAULT NULL,
  redemption_value numeric(22,4) DEFAULT NULL,
  loan_calculation_method_id bigint DEFAULT NULL,
  asset_value numeric(22,4) DEFAULT NULL,
  asset_type_id bigint DEFAULT NULL,
  max_ltv numeric(22,4) DEFAULT NULL,
  ltv_override_reason text,
  variable_rate_source_id bigint DEFAULT NULL,
  source_rate numeric(22,4) DEFAULT NULL,
  margin numeric(22,4) DEFAULT NULL,
  variable_rate_id bigint DEFAULT NULL,
  total_fees numeric(22,4) DEFAULT NULL,
  total_interest_on_fees numeric(22,4) DEFAULT NULL,
  retained_interest numeric(8,2) DEFAULT NULL,
  redeem_date date DEFAULT NULL,
  exit_fee_calculated numeric(22,4) DEFAULT NULL,
  funder_interest_rate numeric(22,4) DEFAULT NULL,
  hybrid_parent_id bigint DEFAULT NULL,
  is_hybrid_parent smallint NOT NULL DEFAULT 0,
  exit_strategies text,
  marketing_channel_id bigint DEFAULT NULL,
  default_rate numeric(22,4) DEFAULT NULL,
  year_type integer DEFAULT 0,
  compound_day integer DEFAULT 1,
  funder_arrangement_fee decimal(22,4) DEFAULT NULL,
  funder_arrangement_fee_is_percent boolean NOT NULL DEFAULT false,
  notice_period_days integer DEFAULT NULL,
  additional_interest_rate numeric(22,5) DEFAULT NULL,
  extended_from bigint DEFAULT NULL,
  extension_date date DEFAULT NULL,
  extended_gross_amount numeric(22,4) DEFAULT NULL,
  gross_development_value numeric(22,4) DEFAULT NULL,
  gross_development_value_gross_loan_greater_note text,
  asset_value_day_net_advance_greater_note text,
  total_drawn_amount decimal(15,2) DEFAULT NULL,
  drawdowns_start_date date DEFAULT NULL,
  drawdowns_end_date date DEFAULT NULL,
  number_of_drawdowns integer DEFAULT NULL,
  tranch_strategy integer DEFAULT NULL,
  used_floor_rate boolean NOT NULL DEFAULT false,
  used_floor_rate_note text,
  profile_approval_status_id bigint DEFAULT NULL,
  first_approval_user_id bigint DEFAULT NULL,
  first_approval_datetime timestamp without time zone DEFAULT NULL,
  second_approval_user_id bigint DEFAULT NULL,
  submitted_by_user_id bigint DEFAULT NULL,
  approval_datetime timestamp without time zone DEFAULT NULL,
  rejected_note text
);
CREATE INDEX drawdowns_drawdown_status_id_foreign ON drawdowns (drawdown_status_id);
CREATE INDEX drawdowns_deal_id_foreign ON drawdowns (deal_id);
CREATE INDEX drawdowns_lender_id_foreign ON drawdowns (lender_id);
CREATE INDEX drawdowns_interest_calculation_type_id_foreign ON drawdowns (interest_calculation_type_id);
CREATE INDEX drawdowns_deal_type_id_foreign ON drawdowns (deal_type_id);
CREATE INDEX drawdowns_interest_type_id_foreign ON drawdowns (interest_type_id);
CREATE INDEX drawdowns_loan_calculation_method_id_foreign ON drawdowns (loan_calculation_method_id);
CREATE INDEX drawdowns_asset_type_id_foreign ON drawdowns (asset_type_id);
CREATE INDEX drawdowns_variable_rate_source_id_foreign ON drawdowns (variable_rate_source_id);
CREATE INDEX drawdowns_variable_rate_id_foreign ON drawdowns (variable_rate_id);
CREATE INDEX drawdowns_refinanced_from_id_foreign ON drawdowns (refinanced_from_id);
CREATE INDEX drawdowns_refinanced_to_id_foreign ON drawdowns (refinanced_to_id);
CREATE INDEX drawdowns_hybrid_parent_id_foreign ON drawdowns (hybrid_parent_id);
CREATE INDEX drawdowns_marketing_channel_id_foreign ON drawdowns (marketing_channel_id);
CREATE INDEX drawdowns_extended_from_foreign ON drawdowns (extended_from);
CREATE INDEX drawdowns_interest_subtype_id_foreign ON drawdowns (interest_subtype_id);
CREATE INDEX drawdowns_profile_approval_status_id_foreign ON drawdowns (profile_approval_status_id);
CREATE INDEX drawdowns_first_approval_user_id_foreign ON drawdowns (first_approval_user_id);
CREATE INDEX drawdowns_second_approval_user_id_foreign ON drawdowns (second_approval_user_id);
CREATE INDEX drawdowns_submitted_by_user_id_foreign ON drawdowns (submitted_by_user_id);


-- prod.email_code_authentication definition

DROP TABLE IF EXISTS email_code_authentication CASCADE;

CREATE TABLE email_code_authentication (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  user_id bigint NOT NULL,
  code varchar(255) NOT NULL,
  created_at timestamp without time zone NOT NULL,
  expires_at timestamp without time zone NOT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX email_code_authentication_user_id_foreign ON email_code_authentication (user_id);


-- prod.exit_fee_tiers definition

DROP TABLE IF EXISTS exit_fee_tiers CASCADE;

CREATE TABLE exit_fee_tiers (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  deal_id bigint NOT NULL,
  term_month numeric(20,0) DEFAULT NULL,
  fee_percent numeric(20,0) DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX exit_fee_tiers_deal_id_foreign ON exit_fee_tiers (deal_id);


-- prod.fees definition

DROP TABLE IF EXISTS fees CASCADE;

CREATE TABLE fees (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  fee_status_id bigint NOT NULL,
  invoice_paid_date date DEFAULT NULL,
  date date DEFAULT NULL,
  fee_type_id bigint NOT NULL,
  service_provider_id bigint DEFAULT NULL,
  fee_amount numeric(22,4) DEFAULT NULL,
  fee_amount_perc numeric(8,2) DEFAULT NULL,
  currency_id bigint NOT NULL,
  deal_id bigint DEFAULT NULL,
  fee_interest smallint DEFAULT NULL,
  generate_invoice numeric(22,4) DEFAULT NULL,
  invoice_due_date date DEFAULT NULL,
  notes text,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  added_to_loan integer NOT NULL DEFAULT 0,
  start_date date DEFAULT NULL,
  end_date date DEFAULT NULL,
  broker_agent_id bigint DEFAULT NULL,
  retained_from_net_advance integer NOT NULL DEFAULT 0,
  commitment_fee_refund_amount decimal(22,4) DEFAULT NULL,
  commitment_fee_refund_date date DEFAULT NULL,
  commitment_fee_refund_period integer DEFAULT NULL,
  quoted_date date DEFAULT NULL,
  quote_confirmed_date date DEFAULT NULL,
  undertaking_confirmed_date date DEFAULT NULL,
  active boolean NOT NULL DEFAULT true
);
CREATE INDEX fees_fee_status_id_foreign ON fees (fee_status_id);
CREATE INDEX fees_fee_type_id_foreign ON fees (fee_type_id);
CREATE INDEX fees_service_provider_id_foreign ON fees (service_provider_id);
CREATE INDEX fees_currency_id_foreign ON fees (currency_id);
CREATE INDEX fees_deal_id_foreign ON fees (deal_id);
CREATE INDEX fees_broker_agent_id_foreign ON fees (broker_agent_id);


-- prod.files definition

DROP TABLE IF EXISTS files CASCADE;

CREATE TABLE files (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  deal_document_category_id bigint DEFAULT NULL,
  directory varchar(255) NOT NULL,
  filename varchar(255) NOT NULL,
  original_filename varchar(255) NOT NULL,
  mime varchar(255) NOT NULL,
  size integer NOT NULL,
  user_id bigint NOT NULL,
  document_folder varchar(1000) DEFAULT NULL,
  sharepoint_path text,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  sharepoint_unique_id varchar(255) NOT NULL
);
CREATE INDEX files_user_id_foreign ON files (user_id);
CREATE INDEX files_deal_document_category_id_foreign ON files (deal_document_category_id);


-- prod.guarantors definition

DROP TABLE IF EXISTS guarantors CASCADE;

CREATE TABLE guarantors (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  deal_id bigint NOT NULL,
  client_individual_id bigint DEFAULT NULL,
  client_company_id bigint DEFAULT NULL,
  client_group_id bigint DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  guarantor_type_id bigint NOT NULL DEFAULT 1
);
CREATE INDEX guarantors_deal_id_foreign ON guarantors (deal_id);
CREATE INDEX guarantors_client_individual_id_foreign ON guarantors (client_individual_id);
CREATE INDEX guarantors_client_company_id_foreign ON guarantors (client_company_id);
CREATE INDEX guarantors_client_group_id_foreign ON guarantors (client_group_id);
CREATE INDEX guarantors_guarantor_type_id_foreign ON guarantors (guarantor_type_id);


-- prod.lender_operational_team_admin definition

DROP TABLE IF EXISTS lender_operational_team_admin CASCADE;

CREATE TABLE lender_operational_team_admin (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  user_id bigint NOT NULL,
  lender_id bigint NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX lender_operational_team_admin_user_id_foreign ON lender_operational_team_admin (user_id);
CREATE INDEX lender_operational_team_admin_lender_id_foreign ON lender_operational_team_admin (lender_id);


-- prod.linked_deals definition

DROP TABLE IF EXISTS linked_deals CASCADE;

CREATE TABLE linked_deals (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  deal_id bigint NOT NULL,
  linked_deal_id bigint NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  cross_collateralized integer NOT NULL DEFAULT 0,
  deleted_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX linked_deals_deal_id_foreign ON linked_deals (deal_id);
CREATE INDEX linked_deals_linked_deal_id_foreign ON linked_deals (linked_deal_id);


-- prod.loan_administrators definition

DROP TABLE IF EXISTS loan_administrators CASCADE;

CREATE TABLE loan_administrators (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  deal_id bigint NOT NULL,
  client_individual_id bigint DEFAULT NULL,
  client_company_id bigint DEFAULT NULL,
  client_group_id bigint DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX loan_administrators_deal_id_foreign ON loan_administrators (deal_id);
CREATE INDEX loan_administrators_client_individual_id_foreign ON loan_administrators (client_individual_id);
CREATE INDEX loan_administrators_client_company_id_foreign ON loan_administrators (client_company_id);
CREATE INDEX loan_administrators_client_group_id_foreign ON loan_administrators (client_group_id);


-- prod.loan_custom_forms definition

DROP TABLE IF EXISTS loan_custom_forms CASCADE;

CREATE TABLE loan_custom_forms (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  name varchar(255) DEFAULT NULL,
  form_data jsonb NOT NULL,
  created_by bigint NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  reference text NOT NULL,
  form_type_id bigint DEFAULT NULL,
  payment_required smallint NOT NULL DEFAULT 0,
  application_form smallint NOT NULL DEFAULT 0,
  payment_fee numeric(22,4) DEFAULT NULL,
  e_sign_required numeric(22,4) DEFAULT NULL
);
CREATE INDEX loan_custom_forms_created_by_foreign ON loan_custom_forms (created_by);
CREATE INDEX loan_custom_forms_form_type_id_foreign ON loan_custom_forms (form_type_id);


-- prod.margin_override definition

DROP TABLE IF EXISTS margin_override CASCADE;

CREATE TABLE margin_override (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  drawdown_id bigint NOT NULL,
  "from" date NOT NULL,
  "to" date NOT NULL,
  rate numeric(22,4) DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX margin_override_drawdown_id_foreign ON margin_override (drawdown_id);

commit ;
-- prod.notes definition

DROP TABLE IF EXISTS notes CASCADE;

CREATE TABLE notes (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  note text NOT NULL,
  created_by bigint NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX notes_created_by_foreign ON notes (created_by);


-- prod.notification definition

DROP TABLE IF EXISTS notification CASCADE;

CREATE TABLE notification (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  deal_notification_rule_id bigint NOT NULL,
  deal_id bigint NOT NULL,
  drawdown_id bigint DEFAULT NULL,
  drawdown_event_type_id bigint DEFAULT NULL,
  file_id bigint DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX notification_deal_id_foreign ON notification (deal_id);
CREATE INDEX notification_drawdown_id_foreign ON notification (drawdown_id);
CREATE INDEX notification_drawdown_event_type_id_foreign ON notification (drawdown_event_type_id);
CREATE INDEX notification_file_id_foreign ON notification (file_id);
CREATE INDEX fk_noti_deal_noti_rule_id ON notification (deal_notification_rule_id);


-- prod.notification_recipients definition

DROP TABLE IF EXISTS notification_recipients CASCADE;

CREATE TABLE notification_recipients (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  notification_id bigint NOT NULL,
  client_individual_id bigint NOT NULL,
  used_email_address numeric(20,0) DEFAULT NULL,
  subject varchar(255) NOT NULL,
  body text NOT NULL,
  sent integer NOT NULL DEFAULT 0,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX notification_recipients_notification_id_foreign ON notification_recipients (notification_id);


-- prod.notification_rules definition

DROP TABLE IF EXISTS notification_rules CASCADE;

CREATE TABLE notification_rules (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  notification_template_id bigint DEFAULT NULL,
  drawdown_event_type_id bigint DEFAULT NULL,
  scheduled_for integer DEFAULT NULL,
  interval_type varchar(255) DEFAULT NULL,
  subject_override varchar(255) DEFAULT NULL,
  body_override text,
  file_id bigint DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  recipient_setting integer DEFAULT NULL,
  lending_type_id bigint DEFAULT NULL
);
CREATE INDEX notification_rules_drawdown_event_type_id_foreign ON notification_rules (drawdown_event_type_id);
CREATE INDEX notification_rules_file_id_foreign ON notification_rules (file_id);
CREATE INDEX notification_rules_notification_template_id_foreign ON notification_rules (notification_template_id);
CREATE INDEX notification_rules_lending_type_id_foreign ON notification_rules (lending_type_id);


-- prod.notification_templates definition

DROP TABLE IF EXISTS notification_templates CASCADE;

CREATE TABLE notification_templates (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  doc_reference varchar(255) NOT NULL,
  subject varchar(255) NOT NULL,
  body text NOT NULL,
  file_id bigint DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX notification_templates_file_id_foreign ON notification_templates (file_id);


-- prod.orders definition

DROP TABLE IF EXISTS orders CASCADE;

CREATE TABLE orders (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  reference varchar(255) DEFAULT NULL,
  client_form_id bigint NOT NULL,
  user_id bigint NOT NULL,
  order_status_id bigint NOT NULL,
  payment_id bigint DEFAULT NULL,
  net_total numeric(22,4) DEFAULT NULL,
  gross_total numeric(22,4) DEFAULT NULL,
  vat_rate numeric(22,4) DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX orders_user_id_foreign ON orders (user_id);
CREATE INDEX orders_client_form_id_foreign ON orders (client_form_id);
CREATE INDEX orders_payment_id_foreign ON orders (payment_id);
CREATE INDEX orders_order_status_id_foreign ON orders (order_status_id);


-- prod.quote_note definition

DROP TABLE IF EXISTS quote_note CASCADE;

CREATE TABLE quote_note (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  quote_id bigint NOT NULL,
  notes text NOT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX quote_note_quote_id_foreign ON quote_note (quote_id);


-- prod.quotes definition

DROP TABLE IF EXISTS quotes CASCADE;

CREATE TABLE quotes (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  drawdown_profile_id bigint NOT NULL,
  quotes_status_id bigint NOT NULL,
  deal_id bigint NOT NULL,
  file_id bigint NOT NULL,
  notes text,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL
);
CREATE INDEX quotes_drawdown_profile_id_foreign ON quotes (drawdown_profile_id);
CREATE INDEX quotes_quotes_status_id_foreign ON quotes (quotes_status_id);
CREATE INDEX quotes_deal_id_foreign ON quotes (deal_id);
CREATE INDEX quotes_file_id_foreign ON quotes (file_id);


-- prod.quotes_recipients definition

DROP TABLE IF EXISTS quotes_recipients CASCADE;

CREATE TABLE quotes_recipients (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  quote_id bigint NOT NULL,
  client_individual_id bigint DEFAULT NULL,
  used_email_address varchar(255) NOT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  client_company_id bigint DEFAULT NULL,
  client_group_id bigint DEFAULT NULL,
  broker_agent_id bigint DEFAULT NULL
);
CREATE INDEX quotes_recipients_quote_id_foreign ON quotes_recipients (quote_id);
CREATE INDEX quotes_recipients_client_individual_id_foreign ON quotes_recipients (client_individual_id);
CREATE INDEX quotes_recipients_client_group_id_foreign ON quotes_recipients (client_group_id);
CREATE INDEX quotes_recipients_client_company_id_foreign ON quotes_recipients (client_company_id);
CREATE INDEX quotes_recipients_broker_agent_id_foreign ON quotes_recipients (broker_agent_id);


-- prod.scheduled_notifications definition

DROP TABLE IF EXISTS scheduled_notifications CASCADE;

CREATE TABLE scheduled_notifications (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  deal_notification_rule_id bigint NOT NULL,
  scheduled_date timestamp without time zone NOT NULL,
  enabled integer DEFAULT NULL,
  enabled_by_user_id bigint DEFAULT NULL,
  sent smallint NOT NULL DEFAULT 0,
  datetime_sent timestamp without time zone DEFAULT NULL,
  subject_sent varchar(255) NOT NULL,
  body_sent text NOT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  drawdown_event_id bigint NOT NULL
);
CREATE INDEX scheduled_notifications_deal_notification_rule_id_foreign ON scheduled_notifications (deal_notification_rule_id);
CREATE INDEX scheduled_notifications_enabled_by_user_id_foreign ON scheduled_notifications (enabled_by_user_id);
CREATE INDEX scheduled_notifications_drawdown_event_id_foreign ON scheduled_notifications (drawdown_event_id);


-- prod.users definition

DROP TABLE IF EXISTS users CASCADE;

CREATE TABLE users (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  type_id bigint NOT NULL,
  company_id bigint NOT NULL,
  avatar_id bigint DEFAULT NULL,
  first_name varchar(255) NOT NULL,
  middle_name varchar(255) DEFAULT NULL,
  last_name varchar(255) NOT NULL,
  email varchar(255) NOT NULL,
  phone varchar(255) DEFAULT NULL,
  email_verified_at timestamp without time zone DEFAULT NULL,
  change_password_datetime timestamp without time zone DEFAULT NULL,
  remember_token varchar(100) DEFAULT NULL,
  verification_token varchar(255) DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  stripe_id varchar(255) DEFAULT NULL,
  pm_type varchar(255) DEFAULT NULL,
  pm_last_four varchar(4) DEFAULT NULL,
  trial_ends_at timestamp without time zone DEFAULT NULL,
  is_active boolean NOT NULL DEFAULT true,
  deleted_at timestamp without time zone DEFAULT NULL,
  payment_provider_id bigint DEFAULT NULL,
  file_id bigint DEFAULT NULL,
  CONSTRAINT users_email_type_id_unique UNIQUE (email,type_id)
);
CREATE INDEX users_stripe_id_index ON users (stripe_id);
CREATE INDEX users_company_id_foreign ON users (company_id);
CREATE INDEX users_type_id_foreign ON users (type_id);
CREATE INDEX users_payment_provider_id_foreign ON users (payment_provider_id);
CREATE INDEX users_avatar_id_foreign ON users (avatar_id);
CREATE INDEX users_file_id_foreign ON users (file_id);


-- prod.valuations definition

DROP TABLE IF EXISTS valuations CASCADE;

CREATE TABLE valuations (
  id bigint GENERATED BY DEFAULT AS IDENTITY,
  asset_id bigint DEFAULT NULL,
  service_provider_id bigint DEFAULT NULL,
  document_id bigint DEFAULT NULL,
  currency_id bigint NOT NULL,
  fee_option_id bigint DEFAULT NULL,
  valuation_status_id bigint DEFAULT NULL,
  report_received_date date DEFAULT NULL,
  date_expected date DEFAULT NULL,
  invoice_due_date date DEFAULT NULL,
  fee_amount numeric(22,4) DEFAULT NULL,
  file_id bigint DEFAULT NULL,
  deleted_at timestamp without time zone DEFAULT NULL,
  created_at timestamp without time zone DEFAULT NULL,
  updated_at timestamp without time zone DEFAULT NULL,
  report_requested_date date DEFAULT NULL
);
CREATE INDEX valuations_asset_id_foreign ON valuations (asset_id);
CREATE INDEX valuations_service_provider_id_foreign ON valuations (service_provider_id);
CREATE INDEX valuations_document_id_foreign ON valuations (document_id);
CREATE INDEX valuations_currency_id_foreign ON valuations (currency_id);
CREATE INDEX valuations_fee_option_id_foreign ON valuations (fee_option_id);
CREATE INDEX valuations_valuation_status_id_foreign ON valuations (valuation_status_id);
CREATE INDEX valuations_file_id_foreign ON valuations (file_id);


-- Apply primary and foreign key constraints

ALTER TABLE activity_log ADD CONSTRAINT activity_log_pkey PRIMARY KEY (id);
ALTER TABLE admins ADD CONSTRAINT admins_pkey PRIMARY KEY (id);
ALTER TABLE asset_addresses ADD CONSTRAINT asset_addresses_pkey PRIMARY KEY (id);
ALTER TABLE asset_insurance_type ADD CONSTRAINT asset_insurance_type_pkey PRIMARY KEY (id);
ALTER TABLE asset_types ADD CONSTRAINT asset_types_pkey PRIMARY KEY (id);
ALTER TABLE attribute_entities ADD CONSTRAINT attribute_entities_pkey PRIMARY KEY (id);
ALTER TABLE attribute_types ADD CONSTRAINT attribute_types_pkey PRIMARY KEY (id);
ALTER TABLE bank_details ADD CONSTRAINT bank_details_pkey PRIMARY KEY (id);
ALTER TABLE bridge_drawdown_types ADD CONSTRAINT bridge_drawdown_types_pkey PRIMARY KEY (id);
ALTER TABLE charge_types ADD CONSTRAINT charge_types_pkey PRIMARY KEY (id);
ALTER TABLE client_form_status ADD CONSTRAINT client_form_status_pkey PRIMARY KEY (id);
ALTER TABLE companies ADD CONSTRAINT companies_pkey PRIMARY KEY (id);
ALTER TABLE currencies ADD CONSTRAINT currencies_pkey PRIMARY KEY (id);
ALTER TABLE deal_aborted_reasons ADD CONSTRAINT deal_aborted_reasons_pkey PRIMARY KEY (id);
ALTER TABLE deal_document_risk ADD CONSTRAINT deal_document_risk_pkey PRIMARY KEY (id);
ALTER TABLE deal_statuses ADD CONSTRAINT deal_statuses_pkey PRIMARY KEY (id);
ALTER TABLE deal_types ADD CONSTRAINT deal_types_pkey PRIMARY KEY (id);
ALTER TABLE document_types ADD CONSTRAINT document_types_pkey PRIMARY KEY (id);
ALTER TABLE drawdown_event_amount_type ADD CONSTRAINT drawdown_event_amount_type_pkey PRIMARY KEY (id);
ALTER TABLE drawdown_event_status ADD CONSTRAINT drawdown_event_status_pkey PRIMARY KEY (id);
ALTER TABLE drawdown_status ADD CONSTRAINT drawdown_status_pkey PRIMARY KEY (id);
ALTER TABLE failed_jobs ADD CONSTRAINT failed_jobs_pkey PRIMARY KEY (id);
ALTER TABLE fee_options ADD CONSTRAINT fee_options_pkey PRIMARY KEY (id);
ALTER TABLE fee_status ADD CONSTRAINT fee_status_pkey PRIMARY KEY (id);
ALTER TABLE fee_type ADD CONSTRAINT fee_type_pkey PRIMARY KEY (id);
ALTER TABLE form_types ADD CONSTRAINT form_types_pkey PRIMARY KEY (id);
ALTER TABLE guarantor_corporates ADD CONSTRAINT guarantor_corporates_pkey PRIMARY KEY (id);
ALTER TABLE guarantor_individuals ADD CONSTRAINT guarantor_individuals_pkey PRIMARY KEY (id);
ALTER TABLE guarantor_type ADD CONSTRAINT guarantor_type_pkey PRIMARY KEY (id);
ALTER TABLE interest_calculation_types ADD CONSTRAINT interest_calculation_types_pkey PRIMARY KEY (id);
ALTER TABLE interest_subtypes ADD CONSTRAINT interest_subtypes_pkey PRIMARY KEY (id);
ALTER TABLE interest_types ADD CONSTRAINT interest_types_pkey PRIMARY KEY (id);
ALTER TABLE introducer_type ADD CONSTRAINT introducer_type_pkey PRIMARY KEY (id);
ALTER TABLE jobs ADD CONSTRAINT jobs_pkey PRIMARY KEY (id);
ALTER TABLE lending_types ADD CONSTRAINT lending_types_pkey PRIMARY KEY (id);
ALTER TABLE loan_calculation_method ADD CONSTRAINT loan_calculation_method_pkey PRIMARY KEY (id);
ALTER TABLE marital_statuses ADD CONSTRAINT marital_statuses_pkey PRIMARY KEY (id);
ALTER TABLE marketing_sources ADD CONSTRAINT marketing_sources_pkey PRIMARY KEY (id);
ALTER TABLE migrations ADD CONSTRAINT migrations_pkey PRIMARY KEY (id);
ALTER TABLE name_titles ADD CONSTRAINT name_titles_pkey PRIMARY KEY (id);
ALTER TABLE order_statuses ADD CONSTRAINT order_statuses_pkey PRIMARY KEY (id);
ALTER TABLE ownership_types ADD CONSTRAINT ownership_types_pkey PRIMARY KEY (id);
ALTER TABLE password_resets ADD CONSTRAINT password_resets_my_row_id_pkey PRIMARY KEY (my_row_id);
ALTER TABLE payment_providers ADD CONSTRAINT payment_providers_pkey PRIMARY KEY (id);
ALTER TABLE payments ADD CONSTRAINT payments_pkey PRIMARY KEY (id);
ALTER TABLE permission_category ADD CONSTRAINT permission_category_pkey PRIMARY KEY (id);
ALTER TABLE permission_groups ADD CONSTRAINT permission_groups_pkey PRIMARY KEY (id);
ALTER TABLE personal_access_tokens ADD CONSTRAINT personal_access_tokens_pkey PRIMARY KEY (id);
ALTER TABLE profile_approval_status ADD CONSTRAINT profile_approval_status_pkey PRIMARY KEY (id);
ALTER TABLE provider_types ADD CONSTRAINT provider_types_pkey PRIMARY KEY (id);
ALTER TABLE purpose_credit_types ADD CONSTRAINT purpose_credit_types_pkey PRIMARY KEY (id);
ALTER TABLE quotes_status ADD CONSTRAINT quotes_status_pkey PRIMARY KEY (id);
ALTER TABLE roles ADD CONSTRAINT roles_pkey PRIMARY KEY (id);
ALTER TABLE sharepoint_updates_timestamps ADD CONSTRAINT sharepoint_updates_timestamps_pkey PRIMARY KEY (id);
ALTER TABLE stripe_settings ADD CONSTRAINT stripe_settings_pkey PRIMARY KEY (id);
ALTER TABLE systems_deal_setting_groups ADD CONSTRAINT systems_deal_setting_groups_pkey PRIMARY KEY (id);
ALTER TABLE use_type ADD CONSTRAINT use_type_pkey PRIMARY KEY (id);
ALTER TABLE user_types ADD CONSTRAINT user_types_pkey PRIMARY KEY (id);
ALTER TABLE valuation_statuses ADD CONSTRAINT valuation_statuses_pkey PRIMARY KEY (id);
ALTER TABLE variable_rate_settings ADD CONSTRAINT variable_rate_settings_pkey PRIMARY KEY (id);
ALTER TABLE variable_rate_sources ADD CONSTRAINT variable_rate_sources_pkey PRIMARY KEY (id);
ALTER TABLE addresses ADD CONSTRAINT addresses_pkey PRIMARY KEY (id);
ALTER TABLE addresses ADD CONSTRAINT addresses_ibfk_1 FOREIGN KEY (ownership_type_id) REFERENCES ownership_types (id);
ALTER TABLE attribute_groups ADD CONSTRAINT attribute_groups_pkey PRIMARY KEY (id);
ALTER TABLE attribute_groups ADD CONSTRAINT attribute_groups_ibfk_1 FOREIGN KEY (attribute_entity_id) REFERENCES attribute_entities (id) ON DELETE CASCADE;
ALTER TABLE attributes ADD CONSTRAINT attributes_pkey PRIMARY KEY (id);
ALTER TABLE attributes ADD CONSTRAINT attributes_ibfk_1 FOREIGN KEY (attribute_group_id) REFERENCES attribute_groups (id) ON DELETE CASCADE;
ALTER TABLE attributes ADD CONSTRAINT attributes_ibfk_2 FOREIGN KEY (attribute_type_id) REFERENCES attribute_types (id) ON DELETE CASCADE;
ALTER TABLE brokers ADD CONSTRAINT brokers_pkey PRIMARY KEY (id);
ALTER TABLE brokers ADD CONSTRAINT brokers_bank_details_id_foreign FOREIGN KEY (bank_details_id) REFERENCES bank_details (id);
ALTER TABLE brokers ADD CONSTRAINT brokers_ibfk_1 FOREIGN KEY (address_id) REFERENCES addresses (id) ON DELETE SET NULL;
ALTER TABLE client_companies ADD CONSTRAINT client_companies_pkey PRIMARY KEY (id);
ALTER TABLE client_companies ADD CONSTRAINT client_companies_ibfk_1 FOREIGN KEY (address_id) REFERENCES addresses (id) ON DELETE SET NULL;
ALTER TABLE client_companies ADD CONSTRAINT client_companies_ibfk_2 FOREIGN KEY (bank_details_id) REFERENCES bank_details (id);
ALTER TABLE client_companies ADD CONSTRAINT client_companies_ibfk_3 FOREIGN KEY (company_id) REFERENCES companies (id);
ALTER TABLE client_groups ADD CONSTRAINT client_groups_pkey PRIMARY KEY (id);
ALTER TABLE client_groups ADD CONSTRAINT client_groups_ibfk_1 FOREIGN KEY (address_id) REFERENCES addresses (id) ON DELETE SET NULL;
ALTER TABLE client_groups ADD CONSTRAINT client_groups_ibfk_2 FOREIGN KEY (bank_details_id) REFERENCES bank_details (id);
ALTER TABLE client_groups ADD CONSTRAINT client_groups_ibfk_3 FOREIGN KEY (company_id) REFERENCES companies (id);
ALTER TABLE documents ADD CONSTRAINT documents_pkey PRIMARY KEY (id);
ALTER TABLE documents ADD CONSTRAINT documents_ibfk_1 FOREIGN KEY (document_type_id) REFERENCES document_types (id) ON DELETE CASCADE;
ALTER TABLE drawdown_event_type ADD CONSTRAINT drawdown_event_type_pkey PRIMARY KEY (id);
ALTER TABLE drawdown_event_type ADD CONSTRAINT drawdown_event_type_ibfk_1 FOREIGN KEY (drawdown_event_amount_type_id) REFERENCES drawdown_event_amount_type (id) ON DELETE CASCADE;
ALTER TABLE fee_type_lending_type ADD CONSTRAINT fee_type_lending_type_pkey PRIMARY KEY (id);
ALTER TABLE fee_type_lending_type ADD CONSTRAINT fee_type_lending_type_fee_type_id_foreign FOREIGN KEY (fee_type_id) REFERENCES fee_type (id) ON DELETE CASCADE;
ALTER TABLE fee_type_lending_type ADD CONSTRAINT fee_type_lending_type_lending_type_id_foreign FOREIGN KEY (lending_type_id) REFERENCES lending_types (id) ON DELETE CASCADE;
ALTER TABLE introducers ADD CONSTRAINT introducers_pkey PRIMARY KEY (id);
ALTER TABLE introducers ADD CONSTRAINT introducers_ibfk_1 FOREIGN KEY (introducer_type_id) REFERENCES introducer_type (id);
ALTER TABLE lenders ADD CONSTRAINT lenders_pkey PRIMARY KEY (id);
ALTER TABLE lenders ADD CONSTRAINT lenders_stripe_settings_id_foreign FOREIGN KEY (stripe_settings_id) REFERENCES stripe_settings (id) ON DELETE SET NULL;
ALTER TABLE model_has_roles ADD CONSTRAINT model_has_roles_role_id_model_id_model_type_pkey PRIMARY KEY (role_id,model_id,model_type);
ALTER TABLE model_has_roles ADD CONSTRAINT model_has_roles_ibfk_1 FOREIGN KEY (role_id) REFERENCES roles (id) ON DELETE CASCADE;
ALTER TABLE payment_attempts ADD CONSTRAINT payment_attempts_pkey PRIMARY KEY (id);
ALTER TABLE payment_attempts ADD CONSTRAINT payment_attempts_ibfk_1 FOREIGN KEY (payment_id) REFERENCES payments (id);
ALTER TABLE payment_attempts ADD CONSTRAINT payment_attempts_ibfk_2 FOREIGN KEY (payment_method_id) REFERENCES payment_providers (id) ON UPDATE CASCADE;
ALTER TABLE permissions ADD CONSTRAINT permissions_pkey PRIMARY KEY (id);
ALTER TABLE permissions ADD CONSTRAINT permissions_parent_id_foreign FOREIGN KEY (parent_id) REFERENCES permissions (id) ON DELETE CASCADE;
ALTER TABLE permissions ADD CONSTRAINT permissions_permission_category_id_foreign FOREIGN KEY (permission_category_id) REFERENCES permission_category (id) ON DELETE CASCADE;
ALTER TABLE role_has_permissions ADD CONSTRAINT role_has_permissions_permission_id_role_id_pkey PRIMARY KEY (permission_id,role_id);
ALTER TABLE role_has_permissions ADD CONSTRAINT role_has_permissions_ibfk_1 FOREIGN KEY (permission_id) REFERENCES permissions (id) ON DELETE CASCADE;
ALTER TABLE role_has_permissions ADD CONSTRAINT role_has_permissions_ibfk_2 FOREIGN KEY (role_id) REFERENCES roles (id) ON DELETE CASCADE;
ALTER TABLE service_providers ADD CONSTRAINT service_providers_pkey PRIMARY KEY (id);
ALTER TABLE service_providers ADD CONSTRAINT service_providers_ibfk_1 FOREIGN KEY (provider_type_id) REFERENCES provider_types (id) ON DELETE CASCADE;
ALTER TABLE systems_deal_setting ADD CONSTRAINT systems_deal_setting_pkey PRIMARY KEY (id);
ALTER TABLE systems_deal_setting ADD CONSTRAINT systems_deal_setting_ibfk_1 FOREIGN KEY (systems_deal_setting_group_id) REFERENCES systems_deal_setting_groups (id) ON DELETE CASCADE;
ALTER TABLE task_group ADD CONSTRAINT task_group_pkey PRIMARY KEY (id);
ALTER TABLE task_group ADD CONSTRAINT task_group_lending_type_id_foreign FOREIGN KEY (lending_type_id) REFERENCES lending_types (id) ON DELETE CASCADE;
ALTER TABLE variable_rates ADD CONSTRAINT variable_rates_pkey PRIMARY KEY (id);
ALTER TABLE variable_rates ADD CONSTRAINT variable_rates_ibfk_1 FOREIGN KEY (parent_id) REFERENCES variable_rates (id) ON DELETE CASCADE;
ALTER TABLE variable_rates ADD CONSTRAINT variable_rates_ibfk_2 FOREIGN KEY (variable_rate_source_id) REFERENCES variable_rate_sources (id) ON DELETE CASCADE;
ALTER TABLE variable_rates_history ADD CONSTRAINT variable_rates_history_pkey PRIMARY KEY (id);
ALTER TABLE variable_rates_history ADD CONSTRAINT variable_rates_history_ibfk_1 FOREIGN KEY (variable_rate_source_id) REFERENCES variable_rate_sources (id) ON DELETE CASCADE;
ALTER TABLE variable_rates_history_copy1 ADD CONSTRAINT variable_rates_history_copy1_pkey PRIMARY KEY (id);
ALTER TABLE variable_rates_history_copy1 ADD CONSTRAINT variable_rates_history_copy1_ibfk_1 FOREIGN KEY (variable_rate_source_id) REFERENCES variable_rate_sources (id) ON DELETE CASCADE;
ALTER TABLE lender_funder_interest_rate ADD CONSTRAINT lender_funder_interest_rate_pkey PRIMARY KEY (id);
ALTER TABLE lender_funder_interest_rate ADD CONSTRAINT lender_funder_interest_rate_lender_id_foreign FOREIGN KEY (lender_id) REFERENCES lenders (id) ON DELETE CASCADE;
ALTER TABLE model_has_permissions ADD CONSTRAINT model_has_permissions_permission_id_model_id_model_type_pkey PRIMARY KEY (permission_id,model_id,model_type);
ALTER TABLE model_has_permissions ADD CONSTRAINT model_has_permissions_ibfk_1 FOREIGN KEY (permission_id) REFERENCES permissions (id) ON DELETE CASCADE;
ALTER TABLE permission_group_permission ADD CONSTRAINT permission_group_permission_pkey PRIMARY KEY (id);
ALTER TABLE permission_group_permission ADD CONSTRAINT permission_group_permission_permission_group_id_foreign FOREIGN KEY (permission_group_id) REFERENCES permission_groups (id) ON DELETE CASCADE;
ALTER TABLE permission_group_permission ADD CONSTRAINT permission_group_permission_permission_id_foreign FOREIGN KEY (permission_id) REFERENCES permissions (id) ON DELETE CASCADE;
ALTER TABLE task ADD CONSTRAINT task_pkey PRIMARY KEY (id);
ALTER TABLE task ADD CONSTRAINT task_ibfk_1 FOREIGN KEY (task_group_id) REFERENCES task_group (id) ON DELETE CASCADE;
ALTER TABLE assets ADD CONSTRAINT assets_pkey PRIMARY KEY (id);
ALTER TABLE assets ADD CONSTRAINT assets_ibfk_1 FOREIGN KEY (asset_address_id) REFERENCES asset_addresses (id) ON DELETE CASCADE;
ALTER TABLE assets ADD CONSTRAINT assets_ibfk_2 FOREIGN KEY (asset_type_id) REFERENCES asset_types (id) ON DELETE CASCADE;
ALTER TABLE assets ADD CONSTRAINT assets_ibfk_3 FOREIGN KEY (client_group_id) REFERENCES client_groups (id) ON DELETE CASCADE;
ALTER TABLE assets ADD CONSTRAINT assets_ibfk_4 FOREIGN KEY (deal_id) REFERENCES deals (id) ON DELETE CASCADE;
ALTER TABLE assets ADD CONSTRAINT assets_ibfk_5 FOREIGN KEY (use_type_id) REFERENCES use_type (id) ON DELETE CASCADE;
ALTER TABLE asset_insurances ADD CONSTRAINT asset_insurances_pkey PRIMARY KEY (id);
ALTER TABLE asset_insurances ADD CONSTRAINT asset_insurances_asset_insurance_type_id_foreign FOREIGN KEY (asset_insurance_type_id) REFERENCES asset_insurance_type (id) ON DELETE RESTRICT;
ALTER TABLE asset_insurances ADD CONSTRAINT asset_insurances_ibfk_1 FOREIGN KEY (asset_id) REFERENCES assets (id) ON DELETE CASCADE;
ALTER TABLE asset_insurance_notes ADD CONSTRAINT asset_insurance_notes_pkey PRIMARY KEY (id);
ALTER TABLE asset_insurance_notes ADD CONSTRAINT asset_insurance_notes_ibfk_1 FOREIGN KEY (asset_insurance_id) REFERENCES asset_insurances (id);
ALTER TABLE asset_insurance_notes ADD CONSTRAINT asset_insurance_notes_ibfk_2 FOREIGN KEY (note_id) REFERENCES notes (id);
ALTER TABLE asset_client_individuals ADD CONSTRAINT asset_client_individuals_pkey PRIMARY KEY (id);
ALTER TABLE asset_client_individuals ADD CONSTRAINT asset_client_individuals_ibfk_1 FOREIGN KEY (asset_id) REFERENCES assets (id) ON DELETE CASCADE;
ALTER TABLE asset_client_individuals ADD CONSTRAINT asset_client_individuals_ibfk_2 FOREIGN KEY (client_individual_id) REFERENCES client_individuals (id) ON DELETE CASCADE;
ALTER TABLE asset_client_companies ADD CONSTRAINT asset_client_companies_pkey PRIMARY KEY (id);
ALTER TABLE asset_client_companies ADD CONSTRAINT asset_client_companies_ibfk_1 FOREIGN KEY (asset_id) REFERENCES assets (id);
ALTER TABLE attribute_values ADD CONSTRAINT attribute_values_pkey PRIMARY KEY (id);
ALTER TABLE attribute_values ADD CONSTRAINT attribute_values_ibfk_1 FOREIGN KEY (attribute_id) REFERENCES attributes (id) ON DELETE CASCADE;
ALTER TABLE attribute_values ADD CONSTRAINT attribute_values_ibfk_2 FOREIGN KEY (client_form_id) REFERENCES client_forms (id) ON DELETE CASCADE;
ALTER TABLE audit ADD CONSTRAINT audit_pkey PRIMARY KEY (id);
ALTER TABLE audit ADD CONSTRAINT audit_ibfk_1 FOREIGN KEY (deal_id) REFERENCES deals (id) ON DELETE CASCADE;
ALTER TABLE audit ADD CONSTRAINT audit_ibfk_2 FOREIGN KEY (user_id) REFERENCES users (id);
ALTER TABLE borrowers ADD CONSTRAINT borrowers_pkey PRIMARY KEY (id);
ALTER TABLE borrowers ADD CONSTRAINT borrowers_admin_id_foreign FOREIGN KEY (admin_id) REFERENCES admins (id) ON DELETE SET NULL;
ALTER TABLE borrowers ADD CONSTRAINT borrowers_guarantor_corporate_id_foreign FOREIGN KEY (guarantor_corporate_id) REFERENCES guarantor_corporates (id) ON DELETE SET NULL;
ALTER TABLE borrowers ADD CONSTRAINT borrowers_guarantor_individual_id_foreign FOREIGN KEY (guarantor_individual_id) REFERENCES guarantor_individuals (id) ON DELETE SET NULL;
ALTER TABLE borrowers ADD CONSTRAINT borrowers_ibfk_1 FOREIGN KEY (client_company_id) REFERENCES client_companies (id) ON DELETE CASCADE;
ALTER TABLE borrowers ADD CONSTRAINT borrowers_ibfk_2 FOREIGN KEY (client_group_id) REFERENCES client_groups (id) ON DELETE CASCADE;
ALTER TABLE borrowers ADD CONSTRAINT borrowers_ibfk_3 FOREIGN KEY (client_individual_id) REFERENCES client_individuals (id) ON DELETE CASCADE;
ALTER TABLE borrowers ADD CONSTRAINT borrowers_ibfk_4 FOREIGN KEY (deal_id) REFERENCES deals (id) ON DELETE CASCADE;
ALTER TABLE broker_agent_deals ADD CONSTRAINT broker_agent_deals_pkey PRIMARY KEY (id);
ALTER TABLE broker_agent_deals ADD CONSTRAINT broker_agent_deals_ibfk_1 FOREIGN KEY (broker_agent_id) REFERENCES broker_agents (id) ON DELETE CASCADE;
ALTER TABLE broker_agent_deals ADD CONSTRAINT broker_agent_deals_ibfk_2 FOREIGN KEY (deal_id) REFERENCES deals (id) ON DELETE CASCADE;
ALTER TABLE broker_agent_notes ADD CONSTRAINT broker_agent_notes_pkey PRIMARY KEY (id);
ALTER TABLE broker_agent_notes ADD CONSTRAINT broker_agent_notes_ibfk_1 FOREIGN KEY (broker_agent_id) REFERENCES broker_agents (id);
ALTER TABLE broker_agent_notes ADD CONSTRAINT broker_agent_notes_ibfk_2 FOREIGN KEY (note_id) REFERENCES notes (id);
ALTER TABLE broker_agents ADD CONSTRAINT broker_agents_pkey PRIMARY KEY (id);
ALTER TABLE broker_agents ADD CONSTRAINT broker_agents_ibfk_1 FOREIGN KEY (address_id) REFERENCES addresses (id) ON DELETE SET NULL;
ALTER TABLE broker_agents ADD CONSTRAINT broker_agents_ibfk_2 FOREIGN KEY (bank_details_id) REFERENCES bank_details (id);
ALTER TABLE broker_agents ADD CONSTRAINT broker_agents_ibfk_3 FOREIGN KEY (broker_id) REFERENCES brokers (id) ON DELETE CASCADE;
ALTER TABLE broker_agents ADD CONSTRAINT broker_agents_ibfk_4 FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE;
ALTER TABLE broker_notes ADD CONSTRAINT broker_notes_pkey PRIMARY KEY (id);
ALTER TABLE broker_notes ADD CONSTRAINT broker_notes_ibfk_1 FOREIGN KEY (broker_id) REFERENCES brokers (id);
ALTER TABLE broker_notes ADD CONSTRAINT broker_notes_ibfk_2 FOREIGN KEY (note_id) REFERENCES notes (id);
ALTER TABLE ccr_reports ADD CONSTRAINT ccr_reports_pkey PRIMARY KEY (id);
ALTER TABLE ccr_reports ADD CONSTRAINT ccr_reports_ibfk_1 FOREIGN KEY (file_id) REFERENCES files (id) ON DELETE CASCADE;
ALTER TABLE charges ADD CONSTRAINT charges_pkey PRIMARY KEY (id);
ALTER TABLE charges ADD CONSTRAINT charges_ibfk_1 FOREIGN KEY (asset_id) REFERENCES assets (id) ON DELETE CASCADE;
ALTER TABLE charges ADD CONSTRAINT charges_ibfk_2 FOREIGN KEY (charge_type_id) REFERENCES charge_types (id) ON DELETE CASCADE;
ALTER TABLE charges ADD CONSTRAINT charges_ibfk_3 FOREIGN KEY (lender_id) REFERENCES lenders (id) ON DELETE CASCADE;
ALTER TABLE charges ADD CONSTRAINT charges_ibfk_4 FOREIGN KEY (parent_id) REFERENCES charges (id) ON DELETE CASCADE;
ALTER TABLE client_company_clients ADD CONSTRAINT client_company_clients_pkey PRIMARY KEY (id);
ALTER TABLE client_company_clients ADD CONSTRAINT client_company_clients_ibfk_1 FOREIGN KEY (client_company_id) REFERENCES client_companies (id);
ALTER TABLE client_company_clients ADD CONSTRAINT client_company_clients_ibfk_2 FOREIGN KEY (client_individual_id) REFERENCES client_individuals (id);
ALTER TABLE client_company_notes ADD CONSTRAINT client_company_notes_pkey PRIMARY KEY (id);
ALTER TABLE client_company_notes ADD CONSTRAINT client_company_notes_ibfk_1 FOREIGN KEY (client_company_id) REFERENCES client_companies (id);
ALTER TABLE client_company_notes ADD CONSTRAINT client_company_notes_ibfk_2 FOREIGN KEY (note_id) REFERENCES notes (id);
ALTER TABLE client_form_attachments ADD CONSTRAINT client_form_attachments_pkey PRIMARY KEY (id);
ALTER TABLE client_form_attachments ADD CONSTRAINT client_form_attachments_ibfk_1 FOREIGN KEY (client_form_id) REFERENCES client_forms (id) ON DELETE CASCADE;
ALTER TABLE client_form_attachments ADD CONSTRAINT client_form_attachments_ibfk_2 FOREIGN KEY (file_id) REFERENCES files (id) ON DELETE CASCADE;
ALTER TABLE client_forms ADD CONSTRAINT client_forms_pkey PRIMARY KEY (id);
ALTER TABLE client_forms ADD CONSTRAINT client_forms_ibfk_1 FOREIGN KEY (broker_agent_id) REFERENCES broker_agents (id) ON DELETE CASCADE;
ALTER TABLE client_forms ADD CONSTRAINT client_forms_ibfk_2 FOREIGN KEY (client_company_id) REFERENCES client_companies (id) ON DELETE CASCADE;
ALTER TABLE client_forms ADD CONSTRAINT client_forms_ibfk_3 FOREIGN KEY (client_form_status_id) REFERENCES client_form_status (id) ON DELETE CASCADE;
ALTER TABLE client_forms ADD CONSTRAINT client_forms_ibfk_4 FOREIGN KEY (client_group_id) REFERENCES client_groups (id) ON DELETE CASCADE;
ALTER TABLE client_forms ADD CONSTRAINT client_forms_ibfk_5 FOREIGN KEY (client_id) REFERENCES client_individuals (id) ON DELETE CASCADE;
ALTER TABLE client_forms ADD CONSTRAINT client_forms_ibfk_6 FOREIGN KEY (deal_id) REFERENCES deals (id) ON DELETE CASCADE;
ALTER TABLE client_forms ADD CONSTRAINT client_forms_ibfk_7 FOREIGN KEY (form_id) REFERENCES loan_custom_forms (id) ON DELETE CASCADE;
ALTER TABLE client_forms ADD CONSTRAINT client_forms_ibfk_8 FOREIGN KEY (sent_by_user_id) REFERENCES users (id) ON DELETE CASCADE;
ALTER TABLE client_group_clients ADD CONSTRAINT client_group_clients_pkey PRIMARY KEY (id);
ALTER TABLE client_group_clients ADD CONSTRAINT client_group_clients_ibfk_1 FOREIGN KEY (client_company_id) REFERENCES client_companies (id);
ALTER TABLE client_group_clients ADD CONSTRAINT client_group_clients_ibfk_2 FOREIGN KEY (client_group_id) REFERENCES client_groups (id);
ALTER TABLE client_group_clients ADD CONSTRAINT client_group_clients_ibfk_3 FOREIGN KEY (client_individual_id) REFERENCES client_individuals (id);
ALTER TABLE client_individual_credit_data ADD CONSTRAINT client_individual_credit_data_pkey PRIMARY KEY (id);
ALTER TABLE client_individual_credit_data ADD CONSTRAINT client_individual_credit_data_client_individual_id_foreign FOREIGN KEY (client_individual_id) REFERENCES client_individuals (id) ON DELETE CASCADE;
ALTER TABLE client_individual_notes ADD CONSTRAINT client_individual_notes_pkey PRIMARY KEY (id);
ALTER TABLE client_individual_notes ADD CONSTRAINT client_individual_notes_ibfk_1 FOREIGN KEY (client_individual_id) REFERENCES client_individuals (id);
ALTER TABLE client_individual_notes ADD CONSTRAINT client_individual_notes_ibfk_2 FOREIGN KEY (note_id) REFERENCES notes (id);
ALTER TABLE client_individuals ADD CONSTRAINT client_individuals_pkey PRIMARY KEY (id);
ALTER TABLE client_individuals ADD CONSTRAINT client_individuals_ibfk_1 FOREIGN KEY (address_id) REFERENCES addresses (id) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE client_individuals ADD CONSTRAINT client_individuals_ibfk_2 FOREIGN KEY (marital_status_id) REFERENCES marital_statuses (id);
ALTER TABLE client_individuals ADD CONSTRAINT client_individuals_ibfk_3 FOREIGN KEY (name_title_id) REFERENCES name_titles (id);
ALTER TABLE client_individuals ADD CONSTRAINT client_individuals_ibfk_4 FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE;
ALTER TABLE deal_activities ADD CONSTRAINT deal_activities_pkey PRIMARY KEY (id);
ALTER TABLE deal_activities ADD CONSTRAINT deal_activities_ibfk_1 FOREIGN KEY (audit_id) REFERENCES activity_log (id) ON DELETE CASCADE;
ALTER TABLE deal_activities ADD CONSTRAINT deal_activities_ibfk_2 FOREIGN KEY (deal_id) REFERENCES deals (id) ON DELETE CASCADE;
ALTER TABLE deal_activities ADD CONSTRAINT deal_activities_ibfk_3 FOREIGN KEY (file_id) REFERENCES files (id) ON DELETE CASCADE;
ALTER TABLE deal_activities ADD CONSTRAINT deal_activities_ibfk_4 FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE;
ALTER TABLE deal_document_categories ADD CONSTRAINT deal_document_categories_pkey PRIMARY KEY (id);
ALTER TABLE deal_document_categories ADD CONSTRAINT deal_document_categories_ibfk_1 FOREIGN KEY (deal_id) REFERENCES deals (id) ON DELETE CASCADE;
ALTER TABLE deal_document_categories ADD CONSTRAINT deal_document_categories_ibfk_2 FOREIGN KEY (parent_id) REFERENCES deal_document_categories (id) ON DELETE CASCADE;
ALTER TABLE deal_document_categories_data ADD CONSTRAINT deal_document_categories_data_pkey PRIMARY KEY (id);
ALTER TABLE deal_document_categories_data ADD CONSTRAINT deal_document_categories_data_ibfk_1 FOREIGN KEY (deal_document_category_id) REFERENCES deal_document_categories (id) ON DELETE CASCADE;
ALTER TABLE deal_document_categories_data ADD CONSTRAINT deal_document_categories_data_ibfk_2 FOREIGN KEY (deal_id) REFERENCES deals (id) ON DELETE CASCADE;
ALTER TABLE deal_documents ADD CONSTRAINT deal_documents_pkey PRIMARY KEY (id);
ALTER TABLE deal_documents ADD CONSTRAINT deal_documents_ibfk_1 FOREIGN KEY (asset_id) REFERENCES assets (id) ON DELETE CASCADE;
ALTER TABLE deal_documents ADD CONSTRAINT deal_documents_ibfk_2 FOREIGN KEY (borrower_id) REFERENCES borrowers (id) ON DELETE CASCADE;
ALTER TABLE deal_documents ADD CONSTRAINT deal_documents_ibfk_3 FOREIGN KEY (client_company_id) REFERENCES client_companies (id) ON DELETE CASCADE;
ALTER TABLE deal_documents ADD CONSTRAINT deal_documents_ibfk_4 FOREIGN KEY (client_individual_id) REFERENCES client_individuals (id) ON DELETE CASCADE;
ALTER TABLE deal_documents ADD CONSTRAINT deal_documents_ibfk_5 FOREIGN KEY (deal_document_category_id) REFERENCES deal_document_categories (id) ON DELETE CASCADE;
ALTER TABLE deal_documents ADD CONSTRAINT deal_documents_ibfk_6 FOREIGN KEY (deal_document_risk_id) REFERENCES deal_document_risk (id) ON DELETE CASCADE;
ALTER TABLE deal_documents ADD CONSTRAINT deal_documents_ibfk_7 FOREIGN KEY (deal_id) REFERENCES deals (id) ON DELETE CASCADE;
ALTER TABLE deal_documents ADD CONSTRAINT deal_documents_ibfk_8 FOREIGN KEY (file_id) REFERENCES files (id) ON DELETE CASCADE;
ALTER TABLE deal_introducers ADD CONSTRAINT deal_introducers_pkey PRIMARY KEY (id);
ALTER TABLE deal_introducers ADD CONSTRAINT deal_introducers_ibfk_1 FOREIGN KEY (broker_id) REFERENCES brokers (id);
ALTER TABLE deal_introducers ADD CONSTRAINT deal_introducers_ibfk_2 FOREIGN KEY (deal_id) REFERENCES deals (id);
ALTER TABLE deal_introducers ADD CONSTRAINT deal_introducers_ibfk_3 FOREIGN KEY (introducer_id) REFERENCES introducers (id);
ALTER TABLE deal_introducers ADD CONSTRAINT deal_introducers_ibfk_4 FOREIGN KEY (introducer_type_id) REFERENCES introducer_type (id);
ALTER TABLE deal_notes ADD CONSTRAINT deal_notes_pkey PRIMARY KEY (id);
ALTER TABLE deal_notes ADD CONSTRAINT deal_notes_ibfk_1 FOREIGN KEY (created_by_user_id) REFERENCES users (id);
ALTER TABLE deal_notes ADD CONSTRAINT deal_notes_ibfk_2 FOREIGN KEY (deal_id) REFERENCES deals (id);
ALTER TABLE deal_notes ADD CONSTRAINT deal_notes_ibfk_3 FOREIGN KEY (replied_to_id) REFERENCES deal_notes (id);
ALTER TABLE deal_notification_rules ADD CONSTRAINT deal_notification_rules_pkey PRIMARY KEY (id);
ALTER TABLE deal_notification_rules ADD CONSTRAINT deal_notification_rules_ibfk_1 FOREIGN KEY (deal_id) REFERENCES deals (id) ON DELETE CASCADE;
ALTER TABLE deal_notification_rules ADD CONSTRAINT deal_notification_rules_ibfk_2 FOREIGN KEY (drawdown_event_type_id) REFERENCES drawdown_event_type (id) ON DELETE CASCADE;
ALTER TABLE deal_notification_rules ADD CONSTRAINT deal_notification_rules_ibfk_3 FOREIGN KEY (file_id) REFERENCES files (id) ON DELETE CASCADE;
ALTER TABLE deal_notification_rules ADD CONSTRAINT deal_notification_rules_ibfk_4 FOREIGN KEY (notification_rule_id) REFERENCES notification_rules (id) ON DELETE CASCADE;
ALTER TABLE deal_notification_rules ADD CONSTRAINT deal_notification_rules_ibfk_5 FOREIGN KEY (notification_template_id) REFERENCES notification_templates (id) ON DELETE CASCADE;
ALTER TABLE deal_notification_rules_recipients ADD CONSTRAINT deal_notification_rules_recipients_pkey PRIMARY KEY (id);
ALTER TABLE deal_notification_rules_recipients ADD CONSTRAINT deal_notification_rules_recipients_ibfk_1 FOREIGN KEY (client_individual_id) REFERENCES client_individuals (id) ON DELETE CASCADE;
ALTER TABLE deal_notification_rules_recipients ADD CONSTRAINT deal_notification_rules_recipients_ibfk_2 FOREIGN KEY (deal_notification_rule_id) REFERENCES deal_notification_rules (id) ON DELETE CASCADE;
ALTER TABLE deal_rate_floors ADD CONSTRAINT deal_rate_floors_pkey PRIMARY KEY (id);
ALTER TABLE deal_rate_floors ADD CONSTRAINT deal_rate_floors_ibfk_1 FOREIGN KEY (deal_id) REFERENCES deals (id) ON DELETE CASCADE;
ALTER TABLE deal_rate_floors ADD CONSTRAINT deal_rate_floors_ibfk_2 FOREIGN KEY (variable_source_id) REFERENCES variable_rate_sources (id) ON DELETE CASCADE;
ALTER TABLE deal_setting_groups ADD CONSTRAINT deal_setting_groups_pkey PRIMARY KEY (id);
ALTER TABLE deal_setting_groups ADD CONSTRAINT deal_setting_groups_ibfk_1 FOREIGN KEY (deal_id) REFERENCES deals (id) ON DELETE CASCADE;
ALTER TABLE deal_settings ADD CONSTRAINT deal_settings_pkey PRIMARY KEY (id);
ALTER TABLE deal_settings ADD CONSTRAINT deal_settings_ibfk_1 FOREIGN KEY (deal_setting_group_id) REFERENCES deal_setting_groups (id) ON DELETE CASCADE;
ALTER TABLE deal_task ADD CONSTRAINT deal_task_pkey PRIMARY KEY (id);
ALTER TABLE deal_task ADD CONSTRAINT deal_task_ibfk_1 FOREIGN KEY (actioned_by_user_id) REFERENCES users (id) ON DELETE CASCADE;
ALTER TABLE deal_task ADD CONSTRAINT deal_task_ibfk_2 FOREIGN KEY (assigned_to_user_id) REFERENCES users (id) ON DELETE CASCADE;
ALTER TABLE deal_task ADD CONSTRAINT deal_task_ibfk_3 FOREIGN KEY (deal_task_group_id) REFERENCES deal_task_group (id) ON DELETE CASCADE;
ALTER TABLE deal_task_group ADD CONSTRAINT deal_task_group_pkey PRIMARY KEY (id);
ALTER TABLE deal_task_group ADD CONSTRAINT deal_task_group_ibfk_1 FOREIGN KEY (deal_id) REFERENCES deals (id) ON DELETE CASCADE;
ALTER TABLE deals ADD CONSTRAINT deals_pkey PRIMARY KEY (id);
ALTER TABLE deals ADD CONSTRAINT deals_ibfk_1 FOREIGN KEY (aborted_reason_id) REFERENCES deal_aborted_reasons (id) ON DELETE SET NULL;
ALTER TABLE deals ADD CONSTRAINT deals_ibfk_10 FOREIGN KEY (previous_status_id) REFERENCES deal_statuses (id) ON DELETE SET NULL;
ALTER TABLE deals ADD CONSTRAINT deals_ibfk_11 FOREIGN KEY (purpose_credit_type_id) REFERENCES purpose_credit_types (id) ON DELETE CASCADE;
ALTER TABLE deals ADD CONSTRAINT deals_ibfk_12 FOREIGN KEY (status_id) REFERENCES deal_statuses (id);
ALTER TABLE deals ADD CONSTRAINT deals_ibfk_13 FOREIGN KEY (type_id) REFERENCES deal_types (id);
ALTER TABLE deals ADD CONSTRAINT deals_ibfk_2 FOREIGN KEY (approval_requested_by) REFERENCES users (id) ON DELETE CASCADE;
ALTER TABLE deals ADD CONSTRAINT deals_ibfk_3 FOREIGN KEY (approved_by) REFERENCES users (id) ON DELETE CASCADE;
ALTER TABLE deals ADD CONSTRAINT deals_ibfk_4 FOREIGN KEY (case_owner_id) REFERENCES users (id) ON DELETE CASCADE;
ALTER TABLE deals ADD CONSTRAINT deals_ibfk_5 FOREIGN KEY (client_group_id) REFERENCES client_groups (id);
ALTER TABLE deals ADD CONSTRAINT deals_ibfk_6 FOREIGN KEY (currency_id) REFERENCES currencies (id);
ALTER TABLE deals ADD CONSTRAINT deals_ibfk_7 FOREIGN KEY (guarantor_id) REFERENCES client_individuals (id);
ALTER TABLE deals ADD CONSTRAINT deals_ibfk_8 FOREIGN KEY (marketing_source_id) REFERENCES marketing_sources (id) ON DELETE CASCADE;
ALTER TABLE deals ADD CONSTRAINT deals_ibfk_9 FOREIGN KEY (parent_id) REFERENCES deals (id);
ALTER TABLE deals ADD CONSTRAINT deals_interest_calculation_type_id_foreign FOREIGN KEY (interest_calculation_type_id) REFERENCES interest_calculation_types (id) ON DELETE SET NULL;
ALTER TABLE deals ADD CONSTRAINT deals_interest_type_id_foreign FOREIGN KEY (interest_type_id) REFERENCES interest_types (id) ON DELETE SET NULL;
ALTER TABLE deals ADD CONSTRAINT deals_lending_type_id_foreign FOREIGN KEY (lending_type_id) REFERENCES lending_types (id) ON DELETE SET NULL;
ALTER TABLE delegated_owners ADD CONSTRAINT delegated_owners_pkey PRIMARY KEY (id);
ALTER TABLE delegated_owners ADD CONSTRAINT delegated_owners_ibfk_1 FOREIGN KEY (deal_id) REFERENCES deals (id) ON DELETE CASCADE;
ALTER TABLE delegated_owners ADD CONSTRAINT delegated_owners_ibfk_2 FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE;
ALTER TABLE drawdown_events ADD CONSTRAINT drawdown_events_pkey PRIMARY KEY (id);
ALTER TABLE drawdown_events ADD CONSTRAINT drawdown_events_ibfk_1 FOREIGN KEY (drawdown_id) REFERENCES drawdowns (id) ON DELETE CASCADE;
ALTER TABLE drawdown_events ADD CONSTRAINT drawdown_events_ibfk_2 FOREIGN KEY (event_status_id) REFERENCES drawdown_event_status (id) ON DELETE CASCADE;
ALTER TABLE drawdown_events ADD CONSTRAINT drawdown_events_ibfk_3 FOREIGN KEY (event_type_id) REFERENCES drawdown_event_type (id) ON DELETE CASCADE;
ALTER TABLE drawdown_events ADD CONSTRAINT drawdown_events_ibfk_4 FOREIGN KEY (variable_rate_source_id) REFERENCES variable_rate_sources (id) ON DELETE CASCADE;
ALTER TABLE drawdown_fees ADD CONSTRAINT drawdown_fees_pkey PRIMARY KEY (id);
ALTER TABLE drawdown_fees ADD CONSTRAINT drawdown_fees_broker_agent_id_foreign FOREIGN KEY (broker_agent_id) REFERENCES broker_agents (id) ON DELETE CASCADE;
ALTER TABLE drawdown_fees ADD CONSTRAINT drawdown_fees_currency_id_foreign FOREIGN KEY (currency_id) REFERENCES currencies (id);
ALTER TABLE drawdown_fees ADD CONSTRAINT drawdown_fees_drawdown_id_foreign FOREIGN KEY (drawdown_id) REFERENCES drawdowns (id) ON DELETE CASCADE;
ALTER TABLE drawdown_fees ADD CONSTRAINT drawdown_fees_fee_status_id_foreign FOREIGN KEY (fee_status_id) REFERENCES fee_status (id) ON DELETE CASCADE;
ALTER TABLE drawdown_fees ADD CONSTRAINT drawdown_fees_fee_type_id_foreign FOREIGN KEY (fee_type_id) REFERENCES fee_type (id);
ALTER TABLE drawdown_fees ADD CONSTRAINT drawdown_fees_service_provider_id_foreign FOREIGN KEY (service_provider_id) REFERENCES service_providers (id);
ALTER TABLE drawdown_fields_approval ADD CONSTRAINT drawdown_fields_approval_pkey PRIMARY KEY (id);
ALTER TABLE drawdown_fields_approval ADD CONSTRAINT drawdown_fields_approval_ibfk_1 FOREIGN KEY (approved_by) REFERENCES users (id) ON DELETE CASCADE;
ALTER TABLE drawdown_fields_approval ADD CONSTRAINT drawdown_fields_approval_ibfk_2 FOREIGN KEY (drawdown_id) REFERENCES drawdowns (id) ON DELETE CASCADE;
ALTER TABLE drawdowns ADD CONSTRAINT drawdowns_pkey PRIMARY KEY (id);
ALTER TABLE drawdowns ADD CONSTRAINT drawdowns_first_approval_user_id_foreign FOREIGN KEY (first_approval_user_id) REFERENCES users (id);
ALTER TABLE drawdowns ADD CONSTRAINT drawdowns_ibfk_1 FOREIGN KEY (asset_type_id) REFERENCES asset_types (id) ON DELETE CASCADE;
ALTER TABLE drawdowns ADD CONSTRAINT drawdowns_ibfk_10 FOREIGN KEY (loan_calculation_method_id) REFERENCES loan_calculation_method (id) ON DELETE CASCADE;
ALTER TABLE drawdowns ADD CONSTRAINT drawdowns_ibfk_11 FOREIGN KEY (marketing_channel_id) REFERENCES marketing_sources (id) ON DELETE CASCADE;
ALTER TABLE drawdowns ADD CONSTRAINT drawdowns_ibfk_12 FOREIGN KEY (refinanced_from_id) REFERENCES drawdowns (id);
ALTER TABLE drawdowns ADD CONSTRAINT drawdowns_ibfk_13 FOREIGN KEY (refinanced_to_id) REFERENCES drawdowns (id);
ALTER TABLE drawdowns ADD CONSTRAINT drawdowns_ibfk_14 FOREIGN KEY (variable_rate_id) REFERENCES variable_rates (id) ON DELETE CASCADE;
ALTER TABLE drawdowns ADD CONSTRAINT drawdowns_ibfk_15 FOREIGN KEY (variable_rate_source_id) REFERENCES variable_rate_sources (id) ON DELETE CASCADE;
ALTER TABLE drawdowns ADD CONSTRAINT drawdowns_ibfk_2 FOREIGN KEY (deal_id) REFERENCES deals (id) ON DELETE CASCADE;
ALTER TABLE drawdowns ADD CONSTRAINT drawdowns_ibfk_3 FOREIGN KEY (deal_type_id) REFERENCES deal_types (id) ON DELETE CASCADE;
ALTER TABLE drawdowns ADD CONSTRAINT drawdowns_ibfk_4 FOREIGN KEY (drawdown_status_id) REFERENCES drawdown_status (id) ON DELETE CASCADE;
ALTER TABLE drawdowns ADD CONSTRAINT drawdowns_ibfk_5 FOREIGN KEY (extended_from) REFERENCES drawdowns (id) ON DELETE CASCADE;
ALTER TABLE drawdowns ADD CONSTRAINT drawdowns_ibfk_6 FOREIGN KEY (hybrid_parent_id) REFERENCES drawdowns (id);
ALTER TABLE drawdowns ADD CONSTRAINT drawdowns_ibfk_7 FOREIGN KEY (interest_calculation_type_id) REFERENCES interest_calculation_types (id) ON DELETE CASCADE;
ALTER TABLE drawdowns ADD CONSTRAINT drawdowns_ibfk_8 FOREIGN KEY (interest_type_id) REFERENCES interest_types (id) ON DELETE CASCADE;
ALTER TABLE drawdowns ADD CONSTRAINT drawdowns_ibfk_9 FOREIGN KEY (lender_id) REFERENCES lenders (id) ON DELETE CASCADE;
ALTER TABLE drawdowns ADD CONSTRAINT drawdowns_interest_subtype_id_foreign FOREIGN KEY (interest_subtype_id) REFERENCES interest_subtypes (id) ON DELETE CASCADE;
ALTER TABLE drawdowns ADD CONSTRAINT drawdowns_profile_approval_status_id_foreign FOREIGN KEY (profile_approval_status_id) REFERENCES profile_approval_status (id);
ALTER TABLE drawdowns ADD CONSTRAINT drawdowns_second_approval_user_id_foreign FOREIGN KEY (second_approval_user_id) REFERENCES users (id);
ALTER TABLE drawdowns ADD CONSTRAINT drawdowns_submitted_by_user_id_foreign FOREIGN KEY (submitted_by_user_id) REFERENCES users (id);
ALTER TABLE email_code_authentication ADD CONSTRAINT email_code_authentication_pkey PRIMARY KEY (id);
ALTER TABLE email_code_authentication ADD CONSTRAINT email_code_authentication_ibfk_1 FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE;
ALTER TABLE exit_fee_tiers ADD CONSTRAINT exit_fee_tiers_pkey PRIMARY KEY (id);
ALTER TABLE exit_fee_tiers ADD CONSTRAINT exit_fee_tiers_ibfk_1 FOREIGN KEY (deal_id) REFERENCES deals (id) ON DELETE CASCADE;
ALTER TABLE fees ADD CONSTRAINT fees_pkey PRIMARY KEY (id);
ALTER TABLE fees ADD CONSTRAINT fees_ibfk_1 FOREIGN KEY (broker_agent_id) REFERENCES broker_agents (id) ON DELETE CASCADE;
ALTER TABLE fees ADD CONSTRAINT fees_ibfk_2 FOREIGN KEY (currency_id) REFERENCES currencies (id);
ALTER TABLE fees ADD CONSTRAINT fees_ibfk_3 FOREIGN KEY (deal_id) REFERENCES deals (id) ON DELETE CASCADE;
ALTER TABLE fees ADD CONSTRAINT fees_ibfk_4 FOREIGN KEY (fee_status_id) REFERENCES fee_status (id) ON DELETE CASCADE;
ALTER TABLE fees ADD CONSTRAINT fees_ibfk_5 FOREIGN KEY (fee_type_id) REFERENCES fee_type (id);
ALTER TABLE fees ADD CONSTRAINT fees_ibfk_6 FOREIGN KEY (service_provider_id) REFERENCES service_providers (id);
ALTER TABLE files ADD CONSTRAINT files_pkey PRIMARY KEY (id);
ALTER TABLE files ADD CONSTRAINT files_ibfk_1 FOREIGN KEY (deal_document_category_id) REFERENCES deal_document_categories (id) ON DELETE CASCADE;
ALTER TABLE files ADD CONSTRAINT files_ibfk_2 FOREIGN KEY (user_id) REFERENCES users (id);
ALTER TABLE guarantors ADD CONSTRAINT guarantors_pkey PRIMARY KEY (id);
ALTER TABLE guarantors ADD CONSTRAINT guarantors_guarantor_type_id_foreign FOREIGN KEY (guarantor_type_id) REFERENCES guarantor_type (id);
ALTER TABLE guarantors ADD CONSTRAINT guarantors_ibfk_1 FOREIGN KEY (client_company_id) REFERENCES client_companies (id) ON DELETE CASCADE;
ALTER TABLE guarantors ADD CONSTRAINT guarantors_ibfk_2 FOREIGN KEY (client_group_id) REFERENCES client_groups (id) ON DELETE CASCADE;
ALTER TABLE guarantors ADD CONSTRAINT guarantors_ibfk_3 FOREIGN KEY (client_individual_id) REFERENCES client_individuals (id) ON DELETE CASCADE;
ALTER TABLE guarantors ADD CONSTRAINT guarantors_ibfk_4 FOREIGN KEY (deal_id) REFERENCES deals (id) ON DELETE CASCADE;
ALTER TABLE lender_operational_team_admin ADD CONSTRAINT lender_operational_team_admin_pkey PRIMARY KEY (id);
ALTER TABLE lender_operational_team_admin ADD CONSTRAINT lender_operational_team_admin_ibfk_1 FOREIGN KEY (lender_id) REFERENCES lenders (id) ON DELETE CASCADE;
ALTER TABLE lender_operational_team_admin ADD CONSTRAINT lender_operational_team_admin_ibfk_2 FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE;
ALTER TABLE linked_deals ADD CONSTRAINT linked_deals_pkey PRIMARY KEY (id);
ALTER TABLE linked_deals ADD CONSTRAINT linked_deals_ibfk_1 FOREIGN KEY (deal_id) REFERENCES deals (id);
ALTER TABLE linked_deals ADD CONSTRAINT linked_deals_ibfk_2 FOREIGN KEY (linked_deal_id) REFERENCES deals (id);
ALTER TABLE loan_administrators ADD CONSTRAINT loan_administrators_pkey PRIMARY KEY (id);
ALTER TABLE loan_administrators ADD CONSTRAINT loan_administrators_ibfk_1 FOREIGN KEY (client_company_id) REFERENCES client_companies (id) ON DELETE CASCADE;
ALTER TABLE loan_administrators ADD CONSTRAINT loan_administrators_ibfk_2 FOREIGN KEY (client_group_id) REFERENCES client_groups (id) ON DELETE CASCADE;
ALTER TABLE loan_administrators ADD CONSTRAINT loan_administrators_ibfk_3 FOREIGN KEY (client_individual_id) REFERENCES client_individuals (id) ON DELETE CASCADE;
ALTER TABLE loan_administrators ADD CONSTRAINT loan_administrators_ibfk_4 FOREIGN KEY (deal_id) REFERENCES deals (id) ON DELETE CASCADE;
ALTER TABLE loan_custom_forms ADD CONSTRAINT loan_custom_forms_pkey PRIMARY KEY (id);
ALTER TABLE loan_custom_forms ADD CONSTRAINT loan_custom_forms_ibfk_1 FOREIGN KEY (created_by) REFERENCES users (id);
ALTER TABLE loan_custom_forms ADD CONSTRAINT loan_custom_forms_ibfk_2 FOREIGN KEY (form_type_id) REFERENCES form_types (id) ON DELETE CASCADE;
ALTER TABLE margin_override ADD CONSTRAINT margin_override_pkey PRIMARY KEY (id);
ALTER TABLE margin_override ADD CONSTRAINT margin_override_ibfk_1 FOREIGN KEY (drawdown_id) REFERENCES drawdowns (id) ON DELETE CASCADE;
ALTER TABLE notes ADD CONSTRAINT notes_pkey PRIMARY KEY (id);
ALTER TABLE notes ADD CONSTRAINT notes_ibfk_1 FOREIGN KEY (created_by) REFERENCES users (id);
ALTER TABLE notification ADD CONSTRAINT notification_pkey PRIMARY KEY (id);
ALTER TABLE notification ADD CONSTRAINT notification_ibfk_1 FOREIGN KEY (deal_notification_rule_id) REFERENCES deal_notification_rules (id) ON DELETE CASCADE;
ALTER TABLE notification ADD CONSTRAINT notification_ibfk_2 FOREIGN KEY (deal_id) REFERENCES deals (id) ON DELETE CASCADE;
ALTER TABLE notification ADD CONSTRAINT notification_ibfk_3 FOREIGN KEY (drawdown_event_type_id) REFERENCES drawdown_event_type (id) ON DELETE CASCADE;
ALTER TABLE notification ADD CONSTRAINT notification_ibfk_4 FOREIGN KEY (drawdown_id) REFERENCES drawdowns (id) ON DELETE CASCADE;
ALTER TABLE notification ADD CONSTRAINT notification_ibfk_5 FOREIGN KEY (file_id) REFERENCES files (id) ON DELETE CASCADE;
ALTER TABLE notification_recipients ADD CONSTRAINT notification_recipients_pkey PRIMARY KEY (id);
ALTER TABLE notification_recipients ADD CONSTRAINT notification_recipients_ibfk_1 FOREIGN KEY (notification_id) REFERENCES notification (id) ON DELETE CASCADE;
ALTER TABLE notification_rules ADD CONSTRAINT notification_rules_pkey PRIMARY KEY (id);
ALTER TABLE notification_rules ADD CONSTRAINT notification_rules_ibfk_1 FOREIGN KEY (drawdown_event_type_id) REFERENCES drawdown_event_type (id) ON DELETE CASCADE;
ALTER TABLE notification_rules ADD CONSTRAINT notification_rules_ibfk_2 FOREIGN KEY (file_id) REFERENCES files (id) ON DELETE CASCADE;
ALTER TABLE notification_rules ADD CONSTRAINT notification_rules_ibfk_3 FOREIGN KEY (notification_template_id) REFERENCES notification_templates (id) ON DELETE CASCADE;
ALTER TABLE notification_rules ADD CONSTRAINT notification_rules_lending_type_id_foreign FOREIGN KEY (lending_type_id) REFERENCES lending_types (id) ON DELETE CASCADE;
ALTER TABLE notification_templates ADD CONSTRAINT notification_templates_pkey PRIMARY KEY (id);
ALTER TABLE notification_templates ADD CONSTRAINT notification_templates_ibfk_1 FOREIGN KEY (file_id) REFERENCES files (id) ON DELETE CASCADE;
ALTER TABLE orders ADD CONSTRAINT orders_pkey PRIMARY KEY (id);
ALTER TABLE orders ADD CONSTRAINT orders_ibfk_1 FOREIGN KEY (client_form_id) REFERENCES client_forms (id);
ALTER TABLE orders ADD CONSTRAINT orders_ibfk_2 FOREIGN KEY (order_status_id) REFERENCES order_statuses (id);
ALTER TABLE orders ADD CONSTRAINT orders_ibfk_3 FOREIGN KEY (payment_id) REFERENCES payments (id);
ALTER TABLE orders ADD CONSTRAINT orders_ibfk_4 FOREIGN KEY (user_id) REFERENCES users (id);
ALTER TABLE quote_note ADD CONSTRAINT quote_note_pkey PRIMARY KEY (id);
ALTER TABLE quote_note ADD CONSTRAINT quote_note_ibfk_1 FOREIGN KEY (quote_id) REFERENCES quotes (id) ON DELETE CASCADE;
ALTER TABLE quotes ADD CONSTRAINT quotes_pkey PRIMARY KEY (id);
ALTER TABLE quotes ADD CONSTRAINT quotes_ibfk_1 FOREIGN KEY (deal_id) REFERENCES deals (id) ON DELETE CASCADE;
ALTER TABLE quotes ADD CONSTRAINT quotes_ibfk_2 FOREIGN KEY (drawdown_profile_id) REFERENCES drawdowns (id) ON DELETE CASCADE;
ALTER TABLE quotes ADD CONSTRAINT quotes_ibfk_3 FOREIGN KEY (file_id) REFERENCES files (id) ON DELETE CASCADE;
ALTER TABLE quotes ADD CONSTRAINT quotes_ibfk_4 FOREIGN KEY (quotes_status_id) REFERENCES quotes_status (id) ON DELETE CASCADE;
ALTER TABLE quotes_recipients ADD CONSTRAINT quotes_recipients_pkey PRIMARY KEY (id);
ALTER TABLE quotes_recipients ADD CONSTRAINT quotes_recipients_broker_agent_id_foreign FOREIGN KEY (broker_agent_id) REFERENCES broker_agents (id);
ALTER TABLE quotes_recipients ADD CONSTRAINT quotes_recipients_client_company_id_foreign FOREIGN KEY (client_company_id) REFERENCES client_companies (id);
ALTER TABLE quotes_recipients ADD CONSTRAINT quotes_recipients_client_group_id_foreign FOREIGN KEY (client_group_id) REFERENCES client_groups (id);
ALTER TABLE quotes_recipients ADD CONSTRAINT quotes_recipients_ibfk_1 FOREIGN KEY (client_individual_id) REFERENCES client_individuals (id) ON DELETE CASCADE;
ALTER TABLE quotes_recipients ADD CONSTRAINT quotes_recipients_ibfk_2 FOREIGN KEY (quote_id) REFERENCES quotes (id) ON DELETE CASCADE;
ALTER TABLE scheduled_notifications ADD CONSTRAINT scheduled_notifications_pkey PRIMARY KEY (id);
ALTER TABLE scheduled_notifications ADD CONSTRAINT scheduled_notifications_ibfk_1 FOREIGN KEY (deal_notification_rule_id) REFERENCES deal_notification_rules (id) ON DELETE CASCADE;
ALTER TABLE scheduled_notifications ADD CONSTRAINT scheduled_notifications_ibfk_2 FOREIGN KEY (drawdown_event_id) REFERENCES drawdown_events (id) ON DELETE CASCADE;
ALTER TABLE scheduled_notifications ADD CONSTRAINT scheduled_notifications_ibfk_3 FOREIGN KEY (enabled_by_user_id) REFERENCES users (id) ON DELETE CASCADE;
ALTER TABLE users ADD CONSTRAINT users_pkey PRIMARY KEY (id);
ALTER TABLE users ADD CONSTRAINT users_ibfk_1 FOREIGN KEY (avatar_id) REFERENCES files (id);
ALTER TABLE users ADD CONSTRAINT users_ibfk_2 FOREIGN KEY (company_id) REFERENCES companies (id);
ALTER TABLE users ADD CONSTRAINT users_ibfk_3 FOREIGN KEY (file_id) REFERENCES files (id) ON DELETE CASCADE;
ALTER TABLE users ADD CONSTRAINT users_ibfk_4 FOREIGN KEY (payment_provider_id) REFERENCES payment_providers (id);
ALTER TABLE users ADD CONSTRAINT users_ibfk_5 FOREIGN KEY (type_id) REFERENCES user_types (id);
ALTER TABLE valuations ADD CONSTRAINT valuations_pkey PRIMARY KEY (id);
ALTER TABLE valuations ADD CONSTRAINT valuations_ibfk_1 FOREIGN KEY (asset_id) REFERENCES assets (id) ON DELETE CASCADE;
ALTER TABLE valuations ADD CONSTRAINT valuations_ibfk_2 FOREIGN KEY (currency_id) REFERENCES currencies (id) ON DELETE CASCADE;
ALTER TABLE valuations ADD CONSTRAINT valuations_ibfk_3 FOREIGN KEY (document_id) REFERENCES documents (id) ON DELETE CASCADE;
ALTER TABLE valuations ADD CONSTRAINT valuations_ibfk_4 FOREIGN KEY (fee_option_id) REFERENCES fee_options (id) ON DELETE CASCADE;
ALTER TABLE valuations ADD CONSTRAINT valuations_ibfk_5 FOREIGN KEY (file_id) REFERENCES files (id) ON DELETE CASCADE;
ALTER TABLE valuations ADD CONSTRAINT valuations_ibfk_6 FOREIGN KEY (service_provider_id) REFERENCES service_providers (id) ON DELETE CASCADE;
ALTER TABLE valuations ADD CONSTRAINT valuations_ibfk_7 FOREIGN KEY (valuation_status_id) REFERENCES valuation_statuses (id) ON DELETE CASCADE;

COMMIT;
