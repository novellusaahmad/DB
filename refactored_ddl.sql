BEGIN;

SET CONSTRAINTS ALL DEFERRED;

-- run your bulk inserts / updates here

DROP TABLE IF EXISTS activity_logs CASCADE;

CREATE TABLE activity_logs (
  id             bigint GENERATED BY DEFAULT AS IDENTITY,
  log_name       varchar(255),
  description    text NOT NULL,
  subject_type   varchar(128),
  subject_id     bigint,
  event          varchar(255),
  causer_type    varchar(128),
  causer_id      bigint,
  batch_uuid     char(36),
  created_at     timestamp without time zone DEFAULT now(),
  updated_at     timestamp without time zone DEFAULT now(),
  deleted_at     timestamp without time zone
);

DROP INDEX IF EXISTS activity_logs_subject_idx;
CREATE INDEX activity_logs_subject_idx ON activity_logs (subject_type, subject_id);
DROP INDEX IF EXISTS activity_logs_causer_idx;
CREATE INDEX activity_logs_causer_idx ON activity_logs (causer_type, causer_id);
DROP INDEX IF EXISTS activity_logs_log_name_idx;
CREATE INDEX activity_logs_log_name_idx ON activity_logs (log_name);

DROP TABLE IF EXISTS reference_domains CASCADE;

CREATE TABLE reference_domains (
  id            bigint GENERATED BY DEFAULT AS IDENTITY,
  code          varchar(64) NOT NULL UNIQUE,
  name          varchar(255) NOT NULL,
  description   text,
  created_at    timestamp without time zone DEFAULT now(),
  updated_at    timestamp without time zone DEFAULT now()
);

DROP TABLE IF EXISTS reference_values CASCADE;

CREATE TABLE reference_values (
  id               bigint GENERATED BY DEFAULT AS IDENTITY,
  domain_id        bigint NOT NULL,
  code             varchar(64) NOT NULL,
  name             varchar(255) NOT NULL,
  description      text,
  display_order    integer DEFAULT 0,
  is_active        boolean DEFAULT true,
  UNIQUE(domain_id, code)
);

DROP TABLE IF EXISTS entities CASCADE;

CREATE TABLE entities (
  id                    bigint GENERATED BY DEFAULT AS IDENTITY,
  entity_type_value_id  bigint NOT NULL,
  legal_name            varchar(255),
  first_name            varchar(255),
  middle_name           varchar(255),
  last_name             varchar(255),
  preferred_name        varchar(255),
  title                 varchar(255),
  salutation            varchar(255),
  gender_value_id       bigint,
  registration_number   varchar(255),
  date_of_birth         date,
  tax_identifier        varchar(255),
  email_address         varchar(255),
  secondary_email       varchar(255),
  phone_number          varchar(64),
  mobile_number         varchar(64),
  status_value_id       bigint,
  created_at            timestamp without time zone DEFAULT now(),
  updated_at            timestamp without time zone DEFAULT now(),
  deleted_at            timestamp without time zone
);

DROP TABLE IF EXISTS entity_credentials CASCADE;

CREATE TABLE entity_credentials (
  id                 bigint GENERATED BY DEFAULT AS IDENTITY,
  entity_id          bigint NOT NULL,
  credential_type_id bigint NOT NULL,
  identifier         varchar(255) NOT NULL,
  secret_hash        varchar(255) NOT NULL,
  expires_at         timestamp without time zone,
  last_used_at       timestamp without time zone,
  is_primary         boolean DEFAULT false,
  created_at         timestamp without time zone DEFAULT now(),
  updated_at         timestamp without time zone DEFAULT now(),
  UNIQUE(entity_id, credential_type_id, identifier)
);

DROP TABLE IF EXISTS contact_points CASCADE;

CREATE TABLE contact_points (
  id                 bigint GENERATED BY DEFAULT AS IDENTITY,
  contactable_type   varchar(128) NOT NULL,
  contactable_id     bigint NOT NULL,
  contact_type_id    bigint NOT NULL,
  contact_value      varchar(255) NOT NULL,
  label              varchar(255),
  is_primary         boolean DEFAULT false,
  is_verified        boolean DEFAULT false,
  verified_at        timestamp without time zone,
  created_at         timestamp without time zone DEFAULT now(),
  updated_at         timestamp without time zone DEFAULT now(),
  UNIQUE(contactable_type, contactable_id, contact_type_id, contact_value)
);

DROP INDEX IF EXISTS contact_points_contactable_idx;
CREATE INDEX contact_points_contactable_idx ON contact_points (contactable_type, contactable_id);

DROP TABLE IF EXISTS postal_addresses CASCADE;

CREATE TABLE postal_addresses (
  id             bigint GENERATED BY DEFAULT AS IDENTITY,
  line1          varchar(255) NOT NULL,
  line2          varchar(255),
  line3          varchar(255),
  street         varchar(255),
  house_number   varchar(64),
  city           varchar(255),
  district       varchar(255),
  county         varchar(255),
  state_region   varchar(255),
  postcode       varchar(32),
  country_code   varchar(2) NOT NULL,
  latitude       numeric(10,7),
  longitude      numeric(10,7),
  created_at     timestamp without time zone DEFAULT now(),
  updated_at     timestamp without time zone DEFAULT now()
);

DROP TABLE IF EXISTS address_links CASCADE;

CREATE TABLE address_links (
  id                 bigint GENERATED BY DEFAULT AS IDENTITY,
  addressable_type   varchar(128) NOT NULL,
  addressable_id     bigint NOT NULL,
  address_id         bigint NOT NULL,
  usage_type_id      bigint NOT NULL,
  is_primary         boolean DEFAULT false,
  valid_from         date,
  valid_to           date,
  created_at         timestamp without time zone DEFAULT now(),
  updated_at         timestamp without time zone DEFAULT now(),
  UNIQUE(addressable_type, addressable_id, usage_type_id, address_id)
);

DROP INDEX IF EXISTS address_links_addressable_idx;
CREATE INDEX address_links_addressable_idx ON address_links (addressable_type, addressable_id);

DROP TABLE IF EXISTS financial_accounts CASCADE;

CREATE TABLE financial_accounts (
  id                 bigint GENERATED BY DEFAULT AS IDENTITY,
  accountable_type   varchar(128) NOT NULL,
  accountable_id     bigint NOT NULL,
  account_type_id    bigint NOT NULL,
  account_reference  varchar(255) NOT NULL,
  bank_name          varchar(255),
  iban               varchar(34),
  bic                varchar(11),
  sort_code          varchar(16),
  currency_code      varchar(3),
  valid_from         date,
  valid_to           date,
  created_at         timestamp without time zone DEFAULT now(),
  updated_at         timestamp without time zone DEFAULT now(),
  UNIQUE(accountable_type, accountable_id, account_reference)
);

DROP INDEX IF EXISTS financial_accounts_accountable_idx;
CREATE INDEX financial_accounts_accountable_idx ON financial_accounts (accountable_type, accountable_id);

DROP TABLE IF EXISTS attribute_definitions CASCADE;

CREATE TABLE attribute_definitions (
  id                 bigint GENERATED BY DEFAULT AS IDENTITY,
  domain_id          bigint NOT NULL,
  code               varchar(128) NOT NULL,
  name               varchar(255) NOT NULL,
  data_type          varchar(32) NOT NULL,
  default_value      text,
  is_required        boolean DEFAULT false,
  UNIQUE(domain_id, code)
);

DROP TABLE IF EXISTS attribute_assignments CASCADE;

CREATE TABLE attribute_assignments (
  id                bigint GENERATED BY DEFAULT AS IDENTITY,
  definition_id     bigint NOT NULL,
  owner_type        varchar(64) NOT NULL,
  owner_id          bigint NOT NULL,
  value_text        text,
  value_number      numeric(22,8),
  value_date        date,
  value_boolean     boolean,
  valid_from        timestamp without time zone,
  valid_to          timestamp without time zone,
  created_at        timestamp without time zone DEFAULT now(),
  updated_at        timestamp without time zone DEFAULT now(),
  UNIQUE(definition_id, owner_type, owner_id, COALESCE(valid_from, '1970-01-01'))
);

DROP TABLE IF EXISTS assets CASCADE;

CREATE TABLE assets (
  id                    bigint GENERATED BY DEFAULT AS IDENTITY,
  asset_type_value_id   bigint NOT NULL,
  asset_identifier      varchar(255),
  description           text,
  status_value_id       bigint,
  owning_entity_id      bigint,
  primary_address_id    bigint,
  acquisition_date      date,
  disposal_date         date,
  created_at            timestamp without time zone DEFAULT now(),
  updated_at            timestamp without time zone DEFAULT now()
);

DROP TABLE IF EXISTS relationship_links CASCADE;

CREATE TABLE relationship_links (
  id                      bigint GENERATED BY DEFAULT AS IDENTITY,
  left_type               varchar(128) NOT NULL,
  left_id                 bigint NOT NULL,
  right_type              varchar(128) NOT NULL,
  right_id                bigint NOT NULL,
  relationship_type_id    bigint NOT NULL,
  role_value_id           bigint,
  context_type            varchar(128),
  context_id              bigint,
  status_value_id         bigint,
  amount_value            numeric(22,2),
  ratio_value             numeric(9,4),
  start_date              date,
  end_date                date,
  started_at              timestamp without time zone,
  ended_at                timestamp without time zone,
  UNIQUE(left_type, left_id, right_type, right_id, relationship_type_id, COALESCE(context_type, ''), COALESCE(context_id, 0))
);

DROP INDEX IF EXISTS relationship_links_left_idx;
CREATE INDEX relationship_links_left_idx ON relationship_links (left_type, left_id);
DROP INDEX IF EXISTS relationship_links_right_idx;
CREATE INDEX relationship_links_right_idx ON relationship_links (right_type, right_id);

DROP TABLE IF EXISTS asset_coverages CASCADE;

CREATE TABLE asset_coverages (
  id                      bigint GENERATED BY DEFAULT AS IDENTITY,
  asset_id                bigint NOT NULL,
  provider_entity_id      bigint,
  coverage_type_id        bigint NOT NULL,
  policy_number           varchar(255),
  coverage_amount         numeric(22,2),
  premium_amount          numeric(22,2),
  start_date              date,
  end_date                date
);

DROP TABLE IF EXISTS asset_metrics CASCADE;

CREATE TABLE asset_metrics (
  id                  bigint GENERATED BY DEFAULT AS IDENTITY,
  asset_id            bigint NOT NULL,
  metric_type_id      bigint NOT NULL,
  metric_value_number numeric(22,6),
  metric_value_text   text,
  metric_value_date   date,
  source_reference    varchar(255),
  effective_date      date NOT NULL
);

DROP TABLE IF EXISTS deals CASCADE;

CREATE TABLE deals (
  id                      bigint GENERATED BY DEFAULT AS IDENTITY,
  deal_number             varchar(64) NOT NULL UNIQUE,
  deal_type_value_id      bigint NOT NULL,
  status_value_id         bigint NOT NULL,
  primary_entity_id       bigint,
  originating_entity_id   bigint,
  created_at              timestamp without time zone DEFAULT now(),
  updated_at              timestamp without time zone DEFAULT now(),
  closed_at               timestamp without time zone
);

DROP TABLE IF EXISTS deal_versions CASCADE;

CREATE TABLE deal_versions (
  id                  bigint GENERATED BY DEFAULT AS IDENTITY,
  deal_id             bigint NOT NULL,
  version_number      integer NOT NULL,
  effective_date      date NOT NULL,
  status_value_id     bigint,
  description         text,
  created_by_entity_id bigint,
  created_at          timestamp without time zone DEFAULT now(),
  UNIQUE(deal_id, version_number)
);

DROP TABLE IF EXISTS deal_terms CASCADE;

CREATE TABLE deal_terms (
  id                   bigint GENERATED BY DEFAULT AS IDENTITY,
  deal_id              bigint NOT NULL,
  version_id           bigint,
  term_type_id         bigint NOT NULL,
  amount               numeric(22,2),
  percentage           numeric(9,4),
  rate                 numeric(9,4),
  term_value_text      text,
  term_value_number    numeric(22,6),
  term_value_date      date,
  effective_date       date NOT NULL,
  expiry_date          date,
  created_at           timestamp without time zone DEFAULT now()
);

DROP TABLE IF EXISTS deal_settings CASCADE;

CREATE TABLE deal_settings (
  id                     bigint GENERATED BY DEFAULT AS IDENTITY,
  deal_id                bigint NOT NULL,
  setting_type_id        bigint NOT NULL,
  value_text             text,
  value_number           numeric(22,6),
  value_boolean          boolean,
  value_date             date,
  inherited_from_id      bigint,
  created_at             timestamp without time zone DEFAULT now(),
  updated_at             timestamp without time zone DEFAULT now(),
  UNIQUE(deal_id, setting_type_id)
);

DROP TABLE IF EXISTS workflow_definitions CASCADE;

CREATE TABLE workflow_definitions (
  id                       bigint GENERATED BY DEFAULT AS IDENTITY,
  scope_type               varchar(64) NOT NULL,
  scope_identifier         varchar(128),
  name                     varchar(255) NOT NULL,
  trigger_event_type_id    bigint,
  description              text,
  created_by_entity_id     bigint,
  created_at               timestamp without time zone DEFAULT now(),
  updated_at               timestamp without time zone DEFAULT now()
);

DROP TABLE IF EXISTS workflow_steps CASCADE;

CREATE TABLE workflow_steps (
  id                      bigint GENERATED BY DEFAULT AS IDENTITY,
  definition_id           bigint NOT NULL,
  step_number             integer NOT NULL,
  name                    varchar(255) NOT NULL,
  step_type_id            bigint NOT NULL,
  assignee_role_id        bigint,
  due_in_days             integer,
  UNIQUE(definition_id, step_number)
);

DROP TABLE IF EXISTS workflow_instances CASCADE;

CREATE TABLE workflow_instances (
  id                   bigint GENERATED BY DEFAULT AS IDENTITY,
  definition_id        bigint NOT NULL,
  subject_type         varchar(128),
  subject_id           bigint,
  status_value_id      bigint NOT NULL,
  started_at           timestamp without time zone DEFAULT now(),
  completed_at         timestamp without time zone
);

DROP INDEX IF EXISTS workflow_instances_subject_idx;
CREATE INDEX workflow_instances_subject_idx ON workflow_instances (subject_type, subject_id);

DROP TABLE IF EXISTS workflow_events CASCADE;

CREATE TABLE workflow_events (
  id                      bigint GENERATED BY DEFAULT AS IDENTITY,
  instance_id             bigint NOT NULL,
  step_id                 bigint,
  event_type_id           bigint NOT NULL,
  performed_by_entity_id  bigint,
  event_at                timestamp without time zone DEFAULT now(),
  notes                   text
);

DROP TABLE IF EXISTS documents CASCADE;

CREATE TABLE documents (
  id                       bigint GENERATED BY DEFAULT AS IDENTITY,
  document_type_id         bigint NOT NULL,
  title                    varchar(255) NOT NULL,
  description              text,
  originating_entity_id    bigint,
  uploaded_by_entity_id    bigint,
  uploaded_at              timestamp without time zone DEFAULT now(),
  file_id                  bigint NOT NULL
);

DROP TABLE IF EXISTS files CASCADE;

CREATE TABLE files (
  id              bigint GENERATED BY DEFAULT AS IDENTITY,
  storage_key     varchar(512) NOT NULL UNIQUE,
  file_name       varchar(255) NOT NULL,
  mime_type       varchar(255) NOT NULL,
  byte_size       bigint NOT NULL,
  checksum        varchar(128),
  created_at      timestamp without time zone DEFAULT now(),
  created_by_entity_id bigint
);

ALTER TABLE documents
  ADD CONSTRAINT documents_file_fk FOREIGN KEY (file_id) REFERENCES files(id);

DROP TABLE IF EXISTS document_links CASCADE;

CREATE TABLE document_links (
  id                 bigint GENERATED BY DEFAULT AS IDENTITY,
  document_id        bigint NOT NULL,
  linkable_type      varchar(128) NOT NULL,
  linkable_id        bigint NOT NULL,
  link_role_id       bigint,
  is_primary         boolean DEFAULT false,
  created_at         timestamp without time zone DEFAULT now(),
  UNIQUE(document_id, linkable_type, linkable_id, COALESCE(link_role_id, 0))
);

DROP INDEX IF EXISTS document_links_linkable_idx;
CREATE INDEX document_links_linkable_idx ON document_links (linkable_type, linkable_id);

DROP TABLE IF EXISTS notes CASCADE;

CREATE TABLE notes (
  id                    bigint GENERATED BY DEFAULT AS IDENTITY,
  author_entity_id      bigint,
  note_body             text NOT NULL,
  visibility_value_id   bigint,
  created_at            timestamp without time zone DEFAULT now(),
  updated_at            timestamp without time zone DEFAULT now()
);

DROP TABLE IF EXISTS note_links CASCADE;

CREATE TABLE note_links (
  id                 bigint GENERATED BY DEFAULT AS IDENTITY,
  note_id            bigint NOT NULL,
  notable_type       varchar(128) NOT NULL,
  notable_id         bigint NOT NULL,
  link_role_id       bigint,
  UNIQUE(note_id, notable_type, notable_id)
);

DROP INDEX IF EXISTS note_links_notable_idx;
CREATE INDEX note_links_notable_idx ON note_links (notable_type, notable_id);

DROP TABLE IF EXISTS notification_templates CASCADE;

CREATE TABLE notification_templates (
  id                   bigint GENERATED BY DEFAULT AS IDENTITY,
  channel_type_id      bigint NOT NULL,
  name                 varchar(255) NOT NULL,
  subject              varchar(255),
  body                 text NOT NULL,
  default_sender       varchar(255),
  created_at           timestamp without time zone DEFAULT now(),
  updated_at           timestamp without time zone DEFAULT now()
);

DROP TABLE IF EXISTS notifications CASCADE;

CREATE TABLE notifications (
  id                         bigint GENERATED BY DEFAULT AS IDENTITY,
  template_id                bigint,
  triggering_event_type_id   bigint,
  context_reference_type     varchar(128),
  context_reference_id       bigint,
  context_summary            text,
  sent_by_entity_id          bigint,
  status_value_id            bigint,
  scheduled_at               timestamp without time zone,
  sent_at                    timestamp without time zone,
  created_at                 timestamp without time zone DEFAULT now()
);

DROP TABLE IF EXISTS notification_targets CASCADE;

CREATE TABLE notification_targets (
  id                      bigint GENERATED BY DEFAULT AS IDENTITY,
  notification_id         bigint NOT NULL,
  target_type             varchar(128),
  target_id               bigint,
  target_address          varchar(255),
  channel_type_id         bigint NOT NULL,
  delivery_status_id      bigint,
  delivery_reference      varchar(255),
  sent_at                 timestamp without time zone,
  response_code           varchar(64),
  response_message        text
);

DROP INDEX IF EXISTS notification_targets_target_idx;
CREATE INDEX notification_targets_target_idx ON notification_targets (target_type, target_id);

DROP TABLE IF EXISTS financial_transactions CASCADE;

CREATE TABLE financial_transactions (
  id                          bigint GENERATED BY DEFAULT AS IDENTITY,
  deal_id                     bigint,
  counterparty_type           varchar(128),
  counterparty_id             bigint,
  transaction_type_id         bigint NOT NULL,
  gross_amount                numeric(22,2) NOT NULL,
  net_amount                  numeric(22,2),
  currency_code               varchar(3) NOT NULL,
  transaction_date            date NOT NULL,
  status_value_id             bigint,
  external_reference          varchar(255),
  created_at                  timestamp without time zone DEFAULT now()
);

DROP INDEX IF EXISTS financial_transactions_counterparty_idx;
CREATE INDEX financial_transactions_counterparty_idx ON financial_transactions (counterparty_type, counterparty_id);

DROP TABLE IF EXISTS financial_allocations CASCADE;

CREATE TABLE financial_allocations (
  id                          bigint GENERATED BY DEFAULT AS IDENTITY,
  transaction_id              bigint NOT NULL,
  allocation_type_id          bigint NOT NULL,
  amount                      numeric(22,2) NOT NULL,
  reference_type              varchar(64),
  reference_id                bigint
);

DROP TABLE IF EXISTS transaction_attempts CASCADE;

CREATE TABLE transaction_attempts (
  id                          bigint GENERATED BY DEFAULT AS IDENTITY,
  transaction_id              bigint NOT NULL,
  attempt_number              integer NOT NULL,
  attempted_at                timestamp without time zone DEFAULT now(),
  channel_type_id             bigint,
  status_value_id             bigint,
  response_code               varchar(64),
  response_message            text,
  error_message               text,
  UNIQUE(transaction_id, attempt_number)
);

DROP TABLE IF EXISTS pricing_schedules CASCADE;

CREATE TABLE pricing_schedules (
  id                          bigint GENERATED BY DEFAULT AS IDENTITY,
  deal_id                     bigint NOT NULL,
  schedule_type_id            bigint NOT NULL,
  base_rate                   numeric(9,4),
  margin_rate                 numeric(9,4),
  floor_rate                  numeric(9,4),
  ceiling_rate                numeric(9,4),
  effective_date              date NOT NULL,
  expiry_date                 date,
  source_reference            varchar(255)
);

DROP TABLE IF EXISTS pricing_history CASCADE;

CREATE TABLE pricing_history (
  id                          bigint GENERATED BY DEFAULT AS IDENTITY,
  schedule_id                 bigint NOT NULL,
  change_type_id              bigint,
  old_value_number            numeric(22,6),
  old_value_text              text,
  new_value_number            numeric(22,6),
  new_value_text              text,
  changed_at                  timestamp without time zone DEFAULT now(),
  changed_by_entity_id        bigint
);

DROP TABLE IF EXISTS drawdowns CASCADE;

CREATE TABLE drawdowns (
  id                      bigint GENERATED BY DEFAULT AS IDENTITY,
  deal_id                 bigint NOT NULL,
  requested_amount        numeric(22,2) NOT NULL,
  approved_amount         numeric(22,2),
  currency_code           varchar(3) NOT NULL,
  status_value_id         bigint,
  requested_at            timestamp without time zone DEFAULT now(),
  approved_at             timestamp without time zone
);

DROP TABLE IF EXISTS drawdown_events CASCADE;

CREATE TABLE drawdown_events (
  id                      bigint GENERATED BY DEFAULT AS IDENTITY,
  drawdown_id             bigint NOT NULL,
  event_type_id           bigint NOT NULL,
  status_value_id         bigint,
  occurred_at             timestamp without time zone NOT NULL,
  recorded_by_entity_id   bigint,
  event_notes             text,
  reference_number        varchar(255)
);

DROP TABLE IF EXISTS drawdown_checks CASCADE;

CREATE TABLE drawdown_checks (
  id                      bigint GENERATED BY DEFAULT AS IDENTITY,
  drawdown_id             bigint NOT NULL,
  check_type_id           bigint NOT NULL,
  is_passed               boolean,
  checked_at              timestamp without time zone,
  checked_by_entity_id    bigint,
  notes                   text
);

DROP TABLE IF EXISTS quotes CASCADE;

CREATE TABLE quotes (
  id                          bigint GENERATED BY DEFAULT AS IDENTITY,
  originating_entity_id       bigint,
  deal_id                     bigint,
  quote_status_id             bigint,
  valid_from                  date NOT NULL,
  valid_to                    date,
  total_amount                numeric(22,2),
  currency_code               varchar(3) NOT NULL,
  created_at                  timestamp without time zone DEFAULT now()
);

DROP TABLE IF EXISTS quote_recipients CASCADE;

CREATE TABLE quote_recipients (
  id                          bigint GENERATED BY DEFAULT AS IDENTITY,
  quote_id                    bigint NOT NULL,
  recipient_type              varchar(128),
  recipient_id                bigint,
  recipient_contact           varchar(255),
  channel_type_id             bigint,
  sent_at                     timestamp without time zone,
  acknowledgement_status_id   bigint
);

DROP INDEX IF EXISTS quote_recipients_recipient_idx;
CREATE INDEX quote_recipients_recipient_idx ON quote_recipients (recipient_type, recipient_id);

DROP TABLE IF EXISTS sales_orders CASCADE;

CREATE TABLE sales_orders (
  id                          bigint GENERATED BY DEFAULT AS IDENTITY,
  quote_id                    bigint,
  deal_id                     bigint,
  order_status_id             bigint,
  placed_at                   timestamp without time zone DEFAULT now(),
  fulfilled_at                timestamp without time zone
);

DROP TABLE IF EXISTS forms CASCADE;

CREATE TABLE forms (
  id                      bigint GENERATED BY DEFAULT AS IDENTITY,
  form_code               varchar(128) NOT NULL,
  name                    varchar(255) NOT NULL,
  version                 integer NOT NULL,
  status_value_id         bigint,
  introduction            text,
  confirmation_statement  text,
  created_by_entity_id    bigint,
  created_at              timestamp without time zone DEFAULT now(),
  updated_at              timestamp without time zone DEFAULT now(),
  UNIQUE(form_code, version)
);

DROP TABLE IF EXISTS form_responses CASCADE;

CREATE TABLE form_responses (
  id                      bigint GENERATED BY DEFAULT AS IDENTITY,
  form_id                 bigint NOT NULL,
  respondent_entity_id    bigint,
  subject_type            varchar(128),
  subject_id              bigint,
  status_value_id         bigint,
  submitted_at            timestamp without time zone,
  overall_comment         text
);

DROP INDEX IF EXISTS form_responses_subject_idx;
CREATE INDEX form_responses_subject_idx ON form_responses (subject_type, subject_id);

DROP TABLE IF EXISTS form_documents CASCADE;

CREATE TABLE form_documents (
  id                      bigint GENERATED BY DEFAULT AS IDENTITY,
  form_response_id        bigint NOT NULL,
  document_id             bigint NOT NULL,
  UNIQUE(form_response_id, document_id)
);

DROP TABLE IF EXISTS form_sections CASCADE;

CREATE TABLE form_sections (
  id                      bigint GENERATED BY DEFAULT AS IDENTITY,
  form_id                 bigint NOT NULL,
  section_number          integer NOT NULL,
  title                   varchar(255),
  description             text,
  UNIQUE(form_id, section_number)
);

DROP TABLE IF EXISTS form_questions CASCADE;

CREATE TABLE form_questions (
  id                      bigint GENERATED BY DEFAULT AS IDENTITY,
  section_id              bigint,
  form_id                 bigint NOT NULL,
  question_number         integer NOT NULL,
  prompt                  text NOT NULL,
  response_type_id        bigint NOT NULL,
  is_required             boolean DEFAULT false,
  help_text               text,
  default_text            text,
  default_number          numeric(22,6),
  default_date            date,
  default_boolean         boolean,
  UNIQUE(form_id, question_number)
);

DROP TABLE IF EXISTS form_question_options CASCADE;

CREATE TABLE form_question_options (
  id                      bigint GENERATED BY DEFAULT AS IDENTITY,
  question_id             bigint NOT NULL,
  option_code             varchar(64) NOT NULL,
  option_label            varchar(255) NOT NULL,
  display_order           integer DEFAULT 0,
  is_active               boolean DEFAULT true,
  UNIQUE(question_id, option_code)
);

DROP TABLE IF EXISTS form_response_answers CASCADE;

CREATE TABLE form_response_answers (
  id                      bigint GENERATED BY DEFAULT AS IDENTITY,
  response_id             bigint NOT NULL,
  question_id             bigint NOT NULL,
  answer_text             text,
  answer_number           numeric(22,6),
  answer_date             date,
  answer_boolean          boolean,
  selected_option_code    varchar(64),
  answered_at             timestamp without time zone DEFAULT now(),
  UNIQUE(response_id, question_id)
);

DROP TABLE IF EXISTS valuations CASCADE;

CREATE TABLE valuations (
  id                      bigint GENERATED BY DEFAULT AS IDENTITY,
  valuable_type           varchar(128) NOT NULL,
  valuable_id             bigint NOT NULL,
  valuation_type_id       bigint,
  valuation_amount        numeric(22,2) NOT NULL,
  valuation_date          date NOT NULL,
  source_reference        varchar(255),
  created_at              timestamp without time zone DEFAULT now()
);

DROP INDEX IF EXISTS valuations_valuable_idx;
CREATE INDEX valuations_valuable_idx ON valuations (valuable_type, valuable_id);

DROP TABLE IF EXISTS system_jobs CASCADE;

CREATE TABLE system_jobs (
  id                      bigint GENERATED BY DEFAULT AS IDENTITY,
  job_key                 varchar(255) NOT NULL,
  arguments_text          text,
  related_record_type     varchar(128),
  related_record_id       bigint,
  status_value_id         bigint,
  available_at            timestamp without time zone,
  attempts                integer DEFAULT 0,
  last_error              text,
  created_at              timestamp without time zone DEFAULT now(),
  updated_at              timestamp without time zone DEFAULT now()
);

DROP TABLE IF EXISTS audit_events CASCADE;

CREATE TABLE audit_events (
  id                      bigint GENERATED BY DEFAULT AS IDENTITY,
  actor_entity_id         bigint,
  scope_type              varchar(64) NOT NULL,
  scope_id                bigint,
  event_type_id           bigint,
  event_at                timestamp without time zone DEFAULT now(),
  ip_address              varchar(64),
  user_agent              varchar(255)
);

DROP TABLE IF EXISTS audit_event_changes CASCADE;

CREATE TABLE audit_event_changes (
  id                      bigint GENERATED BY DEFAULT AS IDENTITY,
  audit_event_id          bigint NOT NULL,
  changed_table           varchar(128) NOT NULL,
  changed_column          varchar(128) NOT NULL,
  old_value_text          text,
  old_value_number        numeric(22,6),
  old_value_boolean       boolean,
  new_value_text          text,
  new_value_number        numeric(22,6),
  new_value_boolean       boolean
);

DROP TABLE IF EXISTS integration_settings CASCADE;

CREATE TABLE integration_settings (
  id                      bigint GENERATED BY DEFAULT AS IDENTITY,
  integration_type_id     bigint NOT NULL,
  endpoint_url            varchar(512),
  account_identifier      varchar(255),
  api_key_reference       varchar(255),
  secret_reference        varchar(255),
  is_active               boolean DEFAULT true,
  created_at              timestamp without time zone DEFAULT now(),
  updated_at              timestamp without time zone DEFAULT now(),
  UNIQUE(integration_type_id)
);

DROP TABLE IF EXISTS system_settings CASCADE;

CREATE TABLE system_settings (
  id                      bigint GENERATED BY DEFAULT AS IDENTITY,
  setting_key             varchar(255) NOT NULL,
  scope_type              varchar(64),
  scope_id                bigint,
  value_text              text,
  value_number            numeric(22,6),
  value_boolean           boolean,
  value_date              date,
  created_at              timestamp without time zone DEFAULT now(),
  updated_at              timestamp without time zone DEFAULT now(),
  UNIQUE(setting_key, COALESCE(scope_type, ''), COALESCE(scope_id, 0))
);


-- Apply primary and foreign key constraints

ALTER TABLE activity_logs ADD CONSTRAINT activity_logs_pkey PRIMARY KEY (id);
ALTER TABLE reference_domains ADD CONSTRAINT reference_domains_pkey PRIMARY KEY (id);
ALTER TABLE reference_values ADD CONSTRAINT reference_values_pkey PRIMARY KEY (id);
ALTER TABLE reference_values ADD CONSTRAINT reference_values_domain_id_fkey FOREIGN KEY (domain_id) REFERENCES reference_domains (id);
ALTER TABLE entities ADD CONSTRAINT entities_pkey PRIMARY KEY (id);
ALTER TABLE entities ADD CONSTRAINT entities_entity_type_value_id_fkey FOREIGN KEY (entity_type_value_id) REFERENCES reference_values (id);
ALTER TABLE entities ADD CONSTRAINT entities_gender_value_id_fkey FOREIGN KEY (gender_value_id) REFERENCES reference_values (id);
ALTER TABLE entities ADD CONSTRAINT entities_status_value_id_fkey FOREIGN KEY (status_value_id) REFERENCES reference_values (id);
ALTER TABLE entity_credentials ADD CONSTRAINT entity_credentials_pkey PRIMARY KEY (id);
ALTER TABLE entity_credentials ADD CONSTRAINT entity_credentials_entity_id_fkey FOREIGN KEY (entity_id) REFERENCES entities (id);
ALTER TABLE entity_credentials ADD CONSTRAINT entity_credentials_credential_type_id_fkey FOREIGN KEY (credential_type_id) REFERENCES reference_values (id);
ALTER TABLE contact_points ADD CONSTRAINT contact_points_pkey PRIMARY KEY (id);
ALTER TABLE contact_points ADD CONSTRAINT contact_points_contact_type_id_fkey FOREIGN KEY (contact_type_id) REFERENCES reference_values (id);
ALTER TABLE postal_addresses ADD CONSTRAINT postal_addresses_pkey PRIMARY KEY (id);
ALTER TABLE address_links ADD CONSTRAINT address_links_pkey PRIMARY KEY (id);
ALTER TABLE address_links ADD CONSTRAINT address_links_address_id_fkey FOREIGN KEY (address_id) REFERENCES postal_addresses (id);
ALTER TABLE address_links ADD CONSTRAINT address_links_usage_type_id_fkey FOREIGN KEY (usage_type_id) REFERENCES reference_values (id);
ALTER TABLE financial_accounts ADD CONSTRAINT financial_accounts_pkey PRIMARY KEY (id);
ALTER TABLE financial_accounts ADD CONSTRAINT financial_accounts_account_type_id_fkey FOREIGN KEY (account_type_id) REFERENCES reference_values (id);
ALTER TABLE attribute_definitions ADD CONSTRAINT attribute_definitions_pkey PRIMARY KEY (id);
ALTER TABLE attribute_definitions ADD CONSTRAINT attribute_definitions_domain_id_fkey FOREIGN KEY (domain_id) REFERENCES reference_domains (id);
ALTER TABLE attribute_assignments ADD CONSTRAINT attribute_assignments_pkey PRIMARY KEY (id);
ALTER TABLE attribute_assignments ADD CONSTRAINT attribute_assignments_definition_id_fkey FOREIGN KEY (definition_id) REFERENCES attribute_definitions (id);
ALTER TABLE assets ADD CONSTRAINT assets_pkey PRIMARY KEY (id);
ALTER TABLE assets ADD CONSTRAINT assets_asset_type_value_id_fkey FOREIGN KEY (asset_type_value_id) REFERENCES reference_values (id);
ALTER TABLE assets ADD CONSTRAINT assets_status_value_id_fkey FOREIGN KEY (status_value_id) REFERENCES reference_values (id);
ALTER TABLE assets ADD CONSTRAINT assets_owning_entity_id_fkey FOREIGN KEY (owning_entity_id) REFERENCES entities (id);
ALTER TABLE assets ADD CONSTRAINT assets_primary_address_id_fkey FOREIGN KEY (primary_address_id) REFERENCES postal_addresses (id);
ALTER TABLE relationship_links ADD CONSTRAINT relationship_links_pkey PRIMARY KEY (id);
ALTER TABLE relationship_links ADD CONSTRAINT relationship_links_relationship_type_id_fkey FOREIGN KEY (relationship_type_id) REFERENCES reference_values (id);
ALTER TABLE relationship_links ADD CONSTRAINT relationship_links_role_value_id_fkey FOREIGN KEY (role_value_id) REFERENCES reference_values (id);
ALTER TABLE relationship_links ADD CONSTRAINT relationship_links_status_value_id_fkey FOREIGN KEY (status_value_id) REFERENCES reference_values (id);
ALTER TABLE asset_coverages ADD CONSTRAINT asset_coverages_pkey PRIMARY KEY (id);
ALTER TABLE asset_coverages ADD CONSTRAINT asset_coverages_asset_id_fkey FOREIGN KEY (asset_id) REFERENCES assets (id);
ALTER TABLE asset_coverages ADD CONSTRAINT asset_coverages_provider_entity_id_fkey FOREIGN KEY (provider_entity_id) REFERENCES entities (id);
ALTER TABLE asset_coverages ADD CONSTRAINT asset_coverages_coverage_type_id_fkey FOREIGN KEY (coverage_type_id) REFERENCES reference_values (id);
ALTER TABLE asset_metrics ADD CONSTRAINT asset_metrics_pkey PRIMARY KEY (id);
ALTER TABLE asset_metrics ADD CONSTRAINT asset_metrics_asset_id_fkey FOREIGN KEY (asset_id) REFERENCES assets (id);
ALTER TABLE asset_metrics ADD CONSTRAINT asset_metrics_metric_type_id_fkey FOREIGN KEY (metric_type_id) REFERENCES reference_values (id);
ALTER TABLE deals ADD CONSTRAINT deals_pkey PRIMARY KEY (id);
ALTER TABLE deals ADD CONSTRAINT deals_deal_type_value_id_fkey FOREIGN KEY (deal_type_value_id) REFERENCES reference_values (id);
ALTER TABLE deals ADD CONSTRAINT deals_status_value_id_fkey FOREIGN KEY (status_value_id) REFERENCES reference_values (id);
ALTER TABLE deals ADD CONSTRAINT deals_primary_entity_id_fkey FOREIGN KEY (primary_entity_id) REFERENCES entities (id);
ALTER TABLE deals ADD CONSTRAINT deals_originating_entity_id_fkey FOREIGN KEY (originating_entity_id) REFERENCES entities (id);
ALTER TABLE deal_versions ADD CONSTRAINT deal_versions_pkey PRIMARY KEY (id);
ALTER TABLE deal_versions ADD CONSTRAINT deal_versions_deal_id_fkey FOREIGN KEY (deal_id) REFERENCES deals (id);
ALTER TABLE deal_versions ADD CONSTRAINT deal_versions_status_value_id_fkey FOREIGN KEY (status_value_id) REFERENCES reference_values (id);
ALTER TABLE deal_versions ADD CONSTRAINT deal_versions_created_by_entity_id_fkey FOREIGN KEY (created_by_entity_id) REFERENCES entities (id);
ALTER TABLE deal_terms ADD CONSTRAINT deal_terms_pkey PRIMARY KEY (id);
ALTER TABLE deal_terms ADD CONSTRAINT deal_terms_deal_id_fkey FOREIGN KEY (deal_id) REFERENCES deals (id);
ALTER TABLE deal_terms ADD CONSTRAINT deal_terms_version_id_fkey FOREIGN KEY (version_id) REFERENCES deal_versions (id);
ALTER TABLE deal_terms ADD CONSTRAINT deal_terms_term_type_id_fkey FOREIGN KEY (term_type_id) REFERENCES reference_values (id);
ALTER TABLE deal_settings ADD CONSTRAINT deal_settings_pkey PRIMARY KEY (id);
ALTER TABLE deal_settings ADD CONSTRAINT deal_settings_deal_id_fkey FOREIGN KEY (deal_id) REFERENCES deals (id);
ALTER TABLE deal_settings ADD CONSTRAINT deal_settings_setting_type_id_fkey FOREIGN KEY (setting_type_id) REFERENCES reference_values (id);
ALTER TABLE deal_settings ADD CONSTRAINT deal_settings_inherited_from_id_fkey FOREIGN KEY (inherited_from_id) REFERENCES deal_settings (id);
ALTER TABLE workflow_definitions ADD CONSTRAINT workflow_definitions_pkey PRIMARY KEY (id);
ALTER TABLE workflow_definitions ADD CONSTRAINT workflow_definitions_trigger_event_type_id_fkey FOREIGN KEY (trigger_event_type_id) REFERENCES reference_values (id);
ALTER TABLE workflow_definitions ADD CONSTRAINT workflow_definitions_created_by_entity_id_fkey FOREIGN KEY (created_by_entity_id) REFERENCES entities (id);
ALTER TABLE workflow_steps ADD CONSTRAINT workflow_steps_pkey PRIMARY KEY (id);
ALTER TABLE workflow_steps ADD CONSTRAINT workflow_steps_definition_id_fkey FOREIGN KEY (definition_id) REFERENCES workflow_definitions (id);
ALTER TABLE workflow_steps ADD CONSTRAINT workflow_steps_step_type_id_fkey FOREIGN KEY (step_type_id) REFERENCES reference_values (id);
ALTER TABLE workflow_steps ADD CONSTRAINT workflow_steps_assignee_role_id_fkey FOREIGN KEY (assignee_role_id) REFERENCES reference_values (id);
ALTER TABLE workflow_instances ADD CONSTRAINT workflow_instances_pkey PRIMARY KEY (id);
ALTER TABLE workflow_instances ADD CONSTRAINT workflow_instances_definition_id_fkey FOREIGN KEY (definition_id) REFERENCES workflow_definitions (id);
ALTER TABLE workflow_instances ADD CONSTRAINT workflow_instances_status_value_id_fkey FOREIGN KEY (status_value_id) REFERENCES reference_values (id);
ALTER TABLE workflow_events ADD CONSTRAINT workflow_events_pkey PRIMARY KEY (id);
ALTER TABLE workflow_events ADD CONSTRAINT workflow_events_instance_id_fkey FOREIGN KEY (instance_id) REFERENCES workflow_instances (id);
ALTER TABLE workflow_events ADD CONSTRAINT workflow_events_step_id_fkey FOREIGN KEY (step_id) REFERENCES workflow_steps (id);
ALTER TABLE workflow_events ADD CONSTRAINT workflow_events_event_type_id_fkey FOREIGN KEY (event_type_id) REFERENCES reference_values (id);
ALTER TABLE workflow_events ADD CONSTRAINT workflow_events_performed_by_entity_id_fkey FOREIGN KEY (performed_by_entity_id) REFERENCES entities (id);
ALTER TABLE documents ADD CONSTRAINT documents_pkey PRIMARY KEY (id);
ALTER TABLE documents ADD CONSTRAINT documents_document_type_id_fkey FOREIGN KEY (document_type_id) REFERENCES reference_values (id);
ALTER TABLE documents ADD CONSTRAINT documents_originating_entity_id_fkey FOREIGN KEY (originating_entity_id) REFERENCES entities (id);
ALTER TABLE documents ADD CONSTRAINT documents_uploaded_by_entity_id_fkey FOREIGN KEY (uploaded_by_entity_id) REFERENCES entities (id);
ALTER TABLE files ADD CONSTRAINT files_pkey PRIMARY KEY (id);
ALTER TABLE files ADD CONSTRAINT files_created_by_entity_id_fkey FOREIGN KEY (created_by_entity_id) REFERENCES entities (id);
ALTER TABLE document_links ADD CONSTRAINT document_links_pkey PRIMARY KEY (id);
ALTER TABLE document_links ADD CONSTRAINT document_links_document_id_fkey FOREIGN KEY (document_id) REFERENCES documents (id);
ALTER TABLE document_links ADD CONSTRAINT document_links_link_role_id_fkey FOREIGN KEY (link_role_id) REFERENCES reference_values (id);
ALTER TABLE notes ADD CONSTRAINT notes_pkey PRIMARY KEY (id);
ALTER TABLE notes ADD CONSTRAINT notes_author_entity_id_fkey FOREIGN KEY (author_entity_id) REFERENCES entities (id);
ALTER TABLE notes ADD CONSTRAINT notes_visibility_value_id_fkey FOREIGN KEY (visibility_value_id) REFERENCES reference_values (id);
ALTER TABLE note_links ADD CONSTRAINT note_links_pkey PRIMARY KEY (id);
ALTER TABLE note_links ADD CONSTRAINT note_links_note_id_fkey FOREIGN KEY (note_id) REFERENCES notes (id);
ALTER TABLE note_links ADD CONSTRAINT note_links_link_role_id_fkey FOREIGN KEY (link_role_id) REFERENCES reference_values (id);
ALTER TABLE notification_templates ADD CONSTRAINT notification_templates_pkey PRIMARY KEY (id);
ALTER TABLE notification_templates ADD CONSTRAINT notification_templates_channel_type_id_fkey FOREIGN KEY (channel_type_id) REFERENCES reference_values (id);
ALTER TABLE notifications ADD CONSTRAINT notifications_pkey PRIMARY KEY (id);
ALTER TABLE notifications ADD CONSTRAINT notifications_template_id_fkey FOREIGN KEY (template_id) REFERENCES notification_templates (id);
ALTER TABLE notifications ADD CONSTRAINT notifications_triggering_event_type_id_fkey FOREIGN KEY (triggering_event_type_id) REFERENCES reference_values (id);
ALTER TABLE notifications ADD CONSTRAINT notifications_sent_by_entity_id_fkey FOREIGN KEY (sent_by_entity_id) REFERENCES entities (id);
ALTER TABLE notifications ADD CONSTRAINT notifications_status_value_id_fkey FOREIGN KEY (status_value_id) REFERENCES reference_values (id);
ALTER TABLE notification_targets ADD CONSTRAINT notification_targets_pkey PRIMARY KEY (id);
ALTER TABLE notification_targets ADD CONSTRAINT notification_targets_notification_id_fkey FOREIGN KEY (notification_id) REFERENCES notifications (id);
ALTER TABLE notification_targets ADD CONSTRAINT notification_targets_channel_type_id_fkey FOREIGN KEY (channel_type_id) REFERENCES reference_values (id);
ALTER TABLE notification_targets ADD CONSTRAINT notification_targets_delivery_status_id_fkey FOREIGN KEY (delivery_status_id) REFERENCES reference_values (id);
ALTER TABLE financial_transactions ADD CONSTRAINT financial_transactions_pkey PRIMARY KEY (id);
ALTER TABLE financial_transactions ADD CONSTRAINT financial_transactions_deal_id_fkey FOREIGN KEY (deal_id) REFERENCES deals (id);
ALTER TABLE financial_transactions ADD CONSTRAINT financial_transactions_transaction_type_id_fkey FOREIGN KEY (transaction_type_id) REFERENCES reference_values (id);
ALTER TABLE financial_transactions ADD CONSTRAINT financial_transactions_status_value_id_fkey FOREIGN KEY (status_value_id) REFERENCES reference_values (id);
ALTER TABLE financial_allocations ADD CONSTRAINT financial_allocations_pkey PRIMARY KEY (id);
ALTER TABLE financial_allocations ADD CONSTRAINT financial_allocations_transaction_id_fkey FOREIGN KEY (transaction_id) REFERENCES financial_transactions (id);
ALTER TABLE financial_allocations ADD CONSTRAINT financial_allocations_allocation_type_id_fkey FOREIGN KEY (allocation_type_id) REFERENCES reference_values (id);
ALTER TABLE transaction_attempts ADD CONSTRAINT transaction_attempts_pkey PRIMARY KEY (id);
ALTER TABLE transaction_attempts ADD CONSTRAINT transaction_attempts_transaction_id_fkey FOREIGN KEY (transaction_id) REFERENCES financial_transactions (id);
ALTER TABLE transaction_attempts ADD CONSTRAINT transaction_attempts_channel_type_id_fkey FOREIGN KEY (channel_type_id) REFERENCES reference_values (id);
ALTER TABLE transaction_attempts ADD CONSTRAINT transaction_attempts_status_value_id_fkey FOREIGN KEY (status_value_id) REFERENCES reference_values (id);
ALTER TABLE pricing_schedules ADD CONSTRAINT pricing_schedules_pkey PRIMARY KEY (id);
ALTER TABLE pricing_schedules ADD CONSTRAINT pricing_schedules_deal_id_fkey FOREIGN KEY (deal_id) REFERENCES deals (id);
ALTER TABLE pricing_schedules ADD CONSTRAINT pricing_schedules_schedule_type_id_fkey FOREIGN KEY (schedule_type_id) REFERENCES reference_values (id);
ALTER TABLE pricing_history ADD CONSTRAINT pricing_history_pkey PRIMARY KEY (id);
ALTER TABLE pricing_history ADD CONSTRAINT pricing_history_schedule_id_fkey FOREIGN KEY (schedule_id) REFERENCES pricing_schedules (id);
ALTER TABLE pricing_history ADD CONSTRAINT pricing_history_change_type_id_fkey FOREIGN KEY (change_type_id) REFERENCES reference_values (id);
ALTER TABLE pricing_history ADD CONSTRAINT pricing_history_changed_by_entity_id_fkey FOREIGN KEY (changed_by_entity_id) REFERENCES entities (id);
ALTER TABLE drawdowns ADD CONSTRAINT drawdowns_pkey PRIMARY KEY (id);
ALTER TABLE drawdowns ADD CONSTRAINT drawdowns_deal_id_fkey FOREIGN KEY (deal_id) REFERENCES deals (id);
ALTER TABLE drawdowns ADD CONSTRAINT drawdowns_status_value_id_fkey FOREIGN KEY (status_value_id) REFERENCES reference_values (id);
ALTER TABLE drawdown_events ADD CONSTRAINT drawdown_events_pkey PRIMARY KEY (id);
ALTER TABLE drawdown_events ADD CONSTRAINT drawdown_events_drawdown_id_fkey FOREIGN KEY (drawdown_id) REFERENCES drawdowns (id);
ALTER TABLE drawdown_events ADD CONSTRAINT drawdown_events_event_type_id_fkey FOREIGN KEY (event_type_id) REFERENCES reference_values (id);
ALTER TABLE drawdown_events ADD CONSTRAINT drawdown_events_status_value_id_fkey FOREIGN KEY (status_value_id) REFERENCES reference_values (id);
ALTER TABLE drawdown_events ADD CONSTRAINT drawdown_events_recorded_by_entity_id_fkey FOREIGN KEY (recorded_by_entity_id) REFERENCES entities (id);
ALTER TABLE drawdown_checks ADD CONSTRAINT drawdown_checks_pkey PRIMARY KEY (id);
ALTER TABLE drawdown_checks ADD CONSTRAINT drawdown_checks_drawdown_id_fkey FOREIGN KEY (drawdown_id) REFERENCES drawdowns (id);
ALTER TABLE drawdown_checks ADD CONSTRAINT drawdown_checks_check_type_id_fkey FOREIGN KEY (check_type_id) REFERENCES reference_values (id);
ALTER TABLE drawdown_checks ADD CONSTRAINT drawdown_checks_checked_by_entity_id_fkey FOREIGN KEY (checked_by_entity_id) REFERENCES entities (id);
ALTER TABLE quotes ADD CONSTRAINT quotes_pkey PRIMARY KEY (id);
ALTER TABLE quotes ADD CONSTRAINT quotes_originating_entity_id_fkey FOREIGN KEY (originating_entity_id) REFERENCES entities (id);
ALTER TABLE quotes ADD CONSTRAINT quotes_deal_id_fkey FOREIGN KEY (deal_id) REFERENCES deals (id);
ALTER TABLE quotes ADD CONSTRAINT quotes_quote_status_id_fkey FOREIGN KEY (quote_status_id) REFERENCES reference_values (id);
ALTER TABLE quote_recipients ADD CONSTRAINT quote_recipients_pkey PRIMARY KEY (id);
ALTER TABLE quote_recipients ADD CONSTRAINT quote_recipients_quote_id_fkey FOREIGN KEY (quote_id) REFERENCES quotes (id);
ALTER TABLE quote_recipients ADD CONSTRAINT quote_recipients_channel_type_id_fkey FOREIGN KEY (channel_type_id) REFERENCES reference_values (id);
ALTER TABLE quote_recipients ADD CONSTRAINT quote_recipients_acknowledgement_status_id_fkey FOREIGN KEY (acknowledgement_status_id) REFERENCES reference_values (id);
ALTER TABLE sales_orders ADD CONSTRAINT sales_orders_pkey PRIMARY KEY (id);
ALTER TABLE sales_orders ADD CONSTRAINT sales_orders_quote_id_fkey FOREIGN KEY (quote_id) REFERENCES quotes (id);
ALTER TABLE sales_orders ADD CONSTRAINT sales_orders_deal_id_fkey FOREIGN KEY (deal_id) REFERENCES deals (id);
ALTER TABLE sales_orders ADD CONSTRAINT sales_orders_order_status_id_fkey FOREIGN KEY (order_status_id) REFERENCES reference_values (id);
ALTER TABLE forms ADD CONSTRAINT forms_pkey PRIMARY KEY (id);
ALTER TABLE forms ADD CONSTRAINT forms_status_value_id_fkey FOREIGN KEY (status_value_id) REFERENCES reference_values (id);
ALTER TABLE forms ADD CONSTRAINT forms_created_by_entity_id_fkey FOREIGN KEY (created_by_entity_id) REFERENCES entities (id);
ALTER TABLE form_responses ADD CONSTRAINT form_responses_pkey PRIMARY KEY (id);
ALTER TABLE form_responses ADD CONSTRAINT form_responses_form_id_fkey FOREIGN KEY (form_id) REFERENCES forms (id);
ALTER TABLE form_responses ADD CONSTRAINT form_responses_respondent_entity_id_fkey FOREIGN KEY (respondent_entity_id) REFERENCES entities (id);
ALTER TABLE form_responses ADD CONSTRAINT form_responses_status_value_id_fkey FOREIGN KEY (status_value_id) REFERENCES reference_values (id);
ALTER TABLE form_documents ADD CONSTRAINT form_documents_pkey PRIMARY KEY (id);
ALTER TABLE form_documents ADD CONSTRAINT form_documents_form_response_id_fkey FOREIGN KEY (form_response_id) REFERENCES form_responses (id);
ALTER TABLE form_documents ADD CONSTRAINT form_documents_document_id_fkey FOREIGN KEY (document_id) REFERENCES documents (id);
ALTER TABLE form_sections ADD CONSTRAINT form_sections_pkey PRIMARY KEY (id);
ALTER TABLE form_sections ADD CONSTRAINT form_sections_form_id_fkey FOREIGN KEY (form_id) REFERENCES forms (id);
ALTER TABLE form_questions ADD CONSTRAINT form_questions_pkey PRIMARY KEY (id);
ALTER TABLE form_questions ADD CONSTRAINT form_questions_section_id_fkey FOREIGN KEY (section_id) REFERENCES form_sections (id);
ALTER TABLE form_questions ADD CONSTRAINT form_questions_form_id_fkey FOREIGN KEY (form_id) REFERENCES forms (id);
ALTER TABLE form_questions ADD CONSTRAINT form_questions_response_type_id_fkey FOREIGN KEY (response_type_id) REFERENCES reference_values (id);
ALTER TABLE form_question_options ADD CONSTRAINT form_question_options_pkey PRIMARY KEY (id);
ALTER TABLE form_question_options ADD CONSTRAINT form_question_options_question_id_fkey FOREIGN KEY (question_id) REFERENCES form_questions (id);
ALTER TABLE form_response_answers ADD CONSTRAINT form_response_answers_pkey PRIMARY KEY (id);
ALTER TABLE form_response_answers ADD CONSTRAINT form_response_answers_response_id_fkey FOREIGN KEY (response_id) REFERENCES form_responses (id);
ALTER TABLE form_response_answers ADD CONSTRAINT form_response_answers_question_id_fkey FOREIGN KEY (question_id) REFERENCES form_questions (id);
ALTER TABLE valuations ADD CONSTRAINT valuations_pkey PRIMARY KEY (id);
ALTER TABLE valuations ADD CONSTRAINT valuations_valuation_type_id_fkey FOREIGN KEY (valuation_type_id) REFERENCES reference_values (id);
ALTER TABLE system_jobs ADD CONSTRAINT system_jobs_pkey PRIMARY KEY (id);
ALTER TABLE system_jobs ADD CONSTRAINT system_jobs_status_value_id_fkey FOREIGN KEY (status_value_id) REFERENCES reference_values (id);
ALTER TABLE audit_events ADD CONSTRAINT audit_events_pkey PRIMARY KEY (id);
ALTER TABLE audit_events ADD CONSTRAINT audit_events_actor_entity_id_fkey FOREIGN KEY (actor_entity_id) REFERENCES entities (id);
ALTER TABLE audit_events ADD CONSTRAINT audit_events_event_type_id_fkey FOREIGN KEY (event_type_id) REFERENCES reference_values (id);
ALTER TABLE audit_event_changes ADD CONSTRAINT audit_event_changes_pkey PRIMARY KEY (id);
ALTER TABLE audit_event_changes ADD CONSTRAINT audit_event_changes_audit_event_id_fkey FOREIGN KEY (audit_event_id) REFERENCES audit_events (id);
ALTER TABLE integration_settings ADD CONSTRAINT integration_settings_pkey PRIMARY KEY (id);
ALTER TABLE integration_settings ADD CONSTRAINT integration_settings_integration_type_id_fkey FOREIGN KEY (integration_type_id) REFERENCES reference_values (id);
ALTER TABLE system_settings ADD CONSTRAINT system_settings_pkey PRIMARY KEY (id);

COMMIT;
